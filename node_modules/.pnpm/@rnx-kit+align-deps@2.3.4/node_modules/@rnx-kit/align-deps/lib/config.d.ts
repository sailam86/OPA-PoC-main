import type { KitConfig } from "@rnx-kit/config";
import type { PackageManifest } from "@rnx-kit/tools-node/package";
import type { AlignDepsConfig, ErrorCode, LegacyCheckConfig, Options } from "./types";
type ConfigResult = AlignDepsConfig | LegacyCheckConfig | ErrorCode;
export declare const defaultConfig: AlignDepsConfig["alignDeps"];
export declare function containsValidPresets(config: KitConfig["alignDeps"]): boolean;
export declare function findEmptyRequirements(config: KitConfig["alignDeps"]): string | undefined;
/**
 * Determine if the given object is a `package.json` manifest.
 *
 * @param manifest Object to evaluate
 * @returns `true` if the object is a manifest
 */
export declare function isPackageManifest(manifest: unknown): manifest is PackageManifest;
/**
 * Loads configuration from the specified package manifest.
 * @param manifestPath The path to the package manifest to load configuration from
 * @param options Command line options
 * @returns The configuration; otherwise an error code
 */
export declare function loadConfig(manifestPath: string, { excludePackages }: Pick<Options, "excludePackages">): ConfigResult;
export {};
//# sourceMappingURL=config.d.ts.map