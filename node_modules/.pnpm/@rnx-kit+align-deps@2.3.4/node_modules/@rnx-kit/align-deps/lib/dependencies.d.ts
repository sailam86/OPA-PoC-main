import type { Capability } from "@rnx-kit/config";
import type { PackageManifest } from "@rnx-kit/tools-node/package";
import type { Options, Preset } from "./types";
export declare function visitDependencies({ dependencies }: PackageManifest, projectRoot: string, visitor: (module: string, modulePath: string) => void, visited?: Set<string>): void;
/**
 * Gathers requirements from dependencies, and their dependencies.
 * @param projectRoot Root of the package to check
 * @param manifest Package manifest
 * @param preset Preset satisfying the requirements of the current package
 * @param requirements Requirements of the current package
 * @param appCapabilities Capabilities used by the current package
 * @param options Command line options
 * @returns Capabilities required by dependencies
 */
export declare function gatherRequirements(projectRoot: string, manifest: PackageManifest, preset: Preset, requirements: string[], appCapabilities: Capability[], { loose }: Pick<Options, "loose">): {
    preset: Preset;
    capabilities: Capability[];
};
//# sourceMappingURL=dependencies.d.ts.map