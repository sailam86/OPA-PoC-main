{"version":3,"file":"start.js","names":["start","_","config","args","webpackConfigPath","getWebpackConfigPath","root","webpackConfig","reversePort","reversePortArg","restArgs","cliOptions","reactNativePath","command","arguments","platform","process","argv","includes","isSilent","silent","isVerbose","verbose","reporter","composeReporters","ConsoleReporter","asJson","json","level","logFile","FileReporter","filename","undefined","filter","Boolean","compiler","Compiler","createServer","stop","options","rootDir","host","port","DEFAULT_PORT","https","cert","key","delegate","ctx","interactive","bindKeypressInput","runAdbReverse","lastStats","on","notifyBuildStart","broadcastToHmrClients","action","stats","notifyBuildEnd","body","createHmrBody","getAsset","sendProgress","data","getMimeType","inferPlatform","uri","url","URL","searchParams","get","exec","pathname","symbolicator","getSource","fileUrl","parseFileUrl","getSourceMap","Error","shouldIncludeFrame","frame","test","file","hmr","getUriPath","onClientConnected","clientId","messages","getHello","getStatus","logger","onMessage","log","logEntry","makeLogEntryFromFastifyLog","issuer","api","getPlatforms","Object","keys","workers","getAssets","entries","assetsCache","map","name","asset","size","info","getCompilationStats","statsCache","stdin","setRawMode","warn","msg","readline","emitKeypressEvents","_key","ctrl","exit","emit","broadcastToMessageClients","method","adbPath","env","ANDROID_HOME","execa","error","message","split","trim","platformOrName","reverse","replace","modules","module","identifier","time","hash","warnings","errors"],"sources":["../../src/commands/start.ts"],"sourcesContent":["import readline from 'readline';\nimport { URL } from 'url';\nimport webpack from 'webpack';\nimport execa from 'execa';\nimport { Config } from '@react-native-community/cli-types';\nimport type { Server } from '@callstack/repack-dev-server';\nimport { CliOptions, HMRMessageBody, StartArguments } from '../types';\nimport { DEFAULT_PORT } from '../env';\nimport {\n  composeReporters,\n  ConsoleReporter,\n  FileReporter,\n  makeLogEntryFromFastifyLog,\n  Reporter,\n} from '../logging';\nimport { Compiler } from '../webpack/Compiler';\nimport { getWebpackConfigPath } from './utils/getWebpackConfigPath';\n\n/**\n * Start command for React Native CLI.\n * It runs `@callstack/repack-dev-server` to provide Development Server functionality to React Native apps\n * in development mode.\n *\n * @param _ Original, non-parsed arguments that were provided when running this command.\n * @param config React Native CLI configuration object.\n * @param args Parsed command line arguments.\n *\n * @internal\n * @category CLI command\n */\nexport async function start(_: string[], config: Config, args: StartArguments) {\n  const webpackConfigPath = getWebpackConfigPath(\n    config.root,\n    args.webpackConfig\n  );\n  const { reversePort: reversePortArg, ...restArgs } = args;\n  const cliOptions: CliOptions = {\n    config: {\n      root: config.root,\n      reactNativePath: config.reactNativePath,\n      webpackConfigPath,\n    },\n    command: 'start',\n    arguments: {\n      // `platform` is empty, since it will be filled in later by `DevServerProxy`\n      start: { ...restArgs, platform: '' },\n    },\n  };\n\n  const reversePort = reversePortArg ?? process.argv.includes('--reverse-port');\n  const isSilent = args.silent;\n  const isVerbose = isSilent\n    ? false\n    : args.verbose ?? process.argv.includes('--verbose');\n  const reporter = composeReporters(\n    [\n      new ConsoleReporter({\n        asJson: args.json,\n        level: isSilent ? 'silent' : isVerbose ? 'verbose' : 'normal',\n      }),\n      args.logFile ? new FileReporter({ filename: args.logFile }) : undefined,\n    ].filter(Boolean) as Reporter[]\n  );\n  const compiler = new Compiler(cliOptions, reporter, isVerbose);\n\n  const { createServer } = await import('@callstack/repack-dev-server');\n  const { start, stop } = await createServer({\n    options: {\n      rootDir: cliOptions.config.root,\n      host: args.host,\n      port: args.port ?? DEFAULT_PORT,\n      https: args.https\n        ? {\n            cert: args.cert,\n            key: args.key,\n          }\n        : undefined,\n    },\n    delegate: (ctx): Server.Delegate => {\n      if (args.interactive) {\n        bindKeypressInput(ctx);\n      }\n\n      if (reversePort && args.port) {\n        runAdbReverse(ctx, args.port);\n      }\n\n      let lastStats: webpack.StatsCompilation | undefined;\n\n      compiler.on('watchRun', ({ platform }) => {\n        ctx.notifyBuildStart(platform);\n        if (platform === 'android') {\n          runAdbReverse(ctx, args.port ?? DEFAULT_PORT);\n        }\n      });\n\n      compiler.on('invalid', ({ platform }) => {\n        ctx.notifyBuildStart(platform);\n        ctx.broadcastToHmrClients({ action: 'building' }, platform);\n      });\n\n      compiler.on(\n        'done',\n        ({\n          platform,\n          stats,\n        }: {\n          platform: string;\n          stats: webpack.StatsCompilation;\n        }) => {\n          ctx.notifyBuildEnd(platform);\n          lastStats = stats;\n          ctx.broadcastToHmrClients(\n            { action: 'built', body: createHmrBody(stats) },\n            platform\n          );\n        }\n      );\n\n      return {\n        compiler: {\n          getAsset: async (filename, platform, sendProgress) =>\n            (await compiler.getAsset(filename, platform, sendProgress)).data,\n          getMimeType: (filename) => compiler.getMimeType(filename),\n          inferPlatform: (uri) => {\n            const url = new URL(uri, 'protocol://domain');\n            if (!url.searchParams.get('platform')) {\n              const [, platform] = /^\\/(.+)\\/.+$/.exec(url.pathname) ?? [];\n              return platform;\n            }\n\n            return undefined;\n          },\n        },\n        symbolicator: {\n          getSource: (fileUrl) => {\n            const { filename, platform } = parseFileUrl(fileUrl);\n            return compiler.getSource(filename, platform);\n          },\n          getSourceMap: (fileUrl) => {\n            const { filename, platform } = parseFileUrl(fileUrl);\n            if (!platform) {\n              throw new Error('Cannot infer platform for file URL');\n            }\n\n            return compiler.getSourceMap(filename, platform);\n          },\n          shouldIncludeFrame: (frame) => {\n            // If the frame points to internal bootstrap/module system logic, skip the code frame.\n            return !/webpack[/\\\\]runtime[/\\\\].+\\s/.test(frame.file);\n          },\n        },\n        hmr: {\n          getUriPath: () => '/__hmr',\n          onClientConnected: (platform, clientId) => {\n            ctx.broadcastToHmrClients(\n              { action: 'sync', body: createHmrBody(lastStats) },\n              platform,\n              [clientId]\n            );\n          },\n        },\n        messages: {\n          getHello: () => 'React Native packager is running',\n          getStatus: () => 'packager-status:running',\n        },\n        logger: {\n          onMessage: (log) => {\n            const logEntry = makeLogEntryFromFastifyLog(log);\n            logEntry.issuer = 'DevServer';\n            reporter.process(logEntry);\n          },\n        },\n        api: {\n          getPlatforms: async () => Object.keys(compiler.workers),\n          getAssets: async (platform) =>\n            Object.entries(compiler.assetsCache[platform] ?? {}).map(\n              ([name, asset]) => ({\n                name,\n                size: asset.info.size,\n              })\n            ),\n          getCompilationStats: async (platform) =>\n            compiler.statsCache[platform] ?? null,\n        },\n      };\n    },\n  });\n\n  await start();\n\n  return {\n    stop: async () => {\n      reporter.stop();\n      await stop();\n    },\n  };\n}\n\nfunction bindKeypressInput(ctx: Server.DelegateContext) {\n  if (!process.stdin.setRawMode) {\n    ctx.log.warn({\n      msg: 'Interactive mode is not supported in this environment',\n    });\n    return;\n  }\n\n  readline.emitKeypressEvents(process.stdin);\n  process.stdin.setRawMode(true);\n\n  process.stdin.on('keypress', (_key, data) => {\n    const { ctrl, name } = data;\n    if (ctrl === true) {\n      switch (name) {\n        case 'c':\n          process.exit();\n          break;\n        case 'z':\n          process.emit('SIGTSTP', 'SIGTSTP');\n          break;\n      }\n    } else if (name === 'r') {\n      ctx.broadcastToMessageClients({ method: 'reload' });\n      ctx.log.info({\n        msg: 'Reloading app',\n      });\n    } else if (name === 'd') {\n      ctx.broadcastToMessageClients({ method: 'devMenu' });\n      ctx.log.info({\n        msg: 'Opening developer menu',\n      });\n    }\n  });\n}\n\nasync function runAdbReverse(ctx: Server.DelegateContext, port: number) {\n  const adbPath = process.env.ANDROID_HOME\n    ? `${process.env.ANDROID_HOME}/platform-tools/adb`\n    : 'adb';\n  const command = `${adbPath} reverse tcp:${port} tcp:${port}`;\n  try {\n    await execa.command(command);\n    ctx.log.info(`Successfully run: ${command}`);\n  } catch (error) {\n    // Get just the error message\n    const message =\n      (error as Error).message.split('error:')[1] || (error as Error).message;\n    ctx.log.warn(`Failed to run: ${command} - ${message.trim()}`);\n  }\n}\n\nfunction parseFileUrl(fileUrl: string) {\n  const { pathname: filename, searchParams } = new URL(fileUrl);\n  let platform = searchParams.get('platform');\n  if (!platform) {\n    const [, platformOrName, name] = filename.split('.').reverse();\n    if (name !== undefined) {\n      platform = platformOrName;\n    }\n  }\n\n  return {\n    filename: filename.replace(/^\\//, ''),\n    platform: platform || undefined,\n  };\n}\n\nfunction createHmrBody(\n  stats?: webpack.StatsCompilation\n): HMRMessageBody | null {\n  if (!stats) {\n    return null;\n  }\n\n  const modules: Record<string, string> = {};\n  for (const module of stats.modules ?? []) {\n    const { identifier, name } = module;\n    if (identifier !== undefined && name) {\n      modules[identifier] = name;\n    }\n  }\n\n  return {\n    name: stats.name ?? '',\n    time: stats.time ?? 0,\n    hash: stats.hash ?? '',\n    warnings: stats.warnings || [],\n    errors: stats.errors || [],\n    modules,\n  };\n}\n"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAIA;;AACA;;AAOA;;AACA;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeA,KAAf,CAAqBC,CAArB,EAAkCC,MAAlC,EAAkDC,IAAlD,EAAwE;EAC7E,MAAMC,iBAAiB,GAAG,IAAAC,0CAAA,EACxBH,MAAM,CAACI,IADiB,EAExBH,IAAI,CAACI,aAFmB,CAA1B;EAIA,MAAM;IAAEC,WAAW,EAAEC,cAAf;IAA+B,GAAGC;EAAlC,IAA+CP,IAArD;EACA,MAAMQ,UAAsB,GAAG;IAC7BT,MAAM,EAAE;MACNI,IAAI,EAAEJ,MAAM,CAACI,IADP;MAENM,eAAe,EAAEV,MAAM,CAACU,eAFlB;MAGNR;IAHM,CADqB;IAM7BS,OAAO,EAAE,OANoB;IAO7BC,SAAS,EAAE;MACT;MACAd,KAAK,EAAE,EAAE,GAAGU,QAAL;QAAeK,QAAQ,EAAE;MAAzB;IAFE;EAPkB,CAA/B;EAaA,MAAMP,WAAW,GAAGC,cAAc,IAAIO,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsB,gBAAtB,CAAtC;EACA,MAAMC,QAAQ,GAAGhB,IAAI,CAACiB,MAAtB;EACA,MAAMC,SAAS,GAAGF,QAAQ,GACtB,KADsB,GAEtBhB,IAAI,CAACmB,OAAL,IAAgBN,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsB,WAAtB,CAFpB;EAGA,MAAMK,QAAQ,GAAG,IAAAC,yBAAA,EACf,CACE,IAAIC,wBAAJ,CAAoB;IAClBC,MAAM,EAAEvB,IAAI,CAACwB,IADK;IAElBC,KAAK,EAAET,QAAQ,GAAG,QAAH,GAAcE,SAAS,GAAG,SAAH,GAAe;EAFnC,CAApB,CADF,EAKElB,IAAI,CAAC0B,OAAL,GAAe,IAAIC,qBAAJ,CAAiB;IAAEC,QAAQ,EAAE5B,IAAI,CAAC0B;EAAjB,CAAjB,CAAf,GAA8DG,SALhE,EAMEC,MANF,CAMSC,OANT,CADe,CAAjB;EASA,MAAMC,QAAQ,GAAG,IAAIC,kBAAJ,CAAazB,UAAb,EAAyBY,QAAzB,EAAmCF,SAAnC,CAAjB;EAEA,MAAM;IAAEgB;EAAF,IAAmB,MAAM,OAAO,8BAAP,CAA/B;EACA,MAAM;IAAErC,KAAF;IAASsC;EAAT,IAAkB,MAAMD,YAAY,CAAC;IACzCE,OAAO,EAAE;MACPC,OAAO,EAAE7B,UAAU,CAACT,MAAX,CAAkBI,IADpB;MAEPmC,IAAI,EAAEtC,IAAI,CAACsC,IAFJ;MAGPC,IAAI,EAAEvC,IAAI,CAACuC,IAAL,IAAaC,iBAHZ;MAIPC,KAAK,EAAEzC,IAAI,CAACyC,KAAL,GACH;QACEC,IAAI,EAAE1C,IAAI,CAAC0C,IADb;QAEEC,GAAG,EAAE3C,IAAI,CAAC2C;MAFZ,CADG,GAKHd;IATG,CADgC;IAYzCe,QAAQ,EAAGC,GAAD,IAA0B;MAClC,IAAI7C,IAAI,CAAC8C,WAAT,EAAsB;QACpBC,iBAAiB,CAACF,GAAD,CAAjB;MACD;;MAED,IAAIxC,WAAW,IAAIL,IAAI,CAACuC,IAAxB,EAA8B;QAC5BS,aAAa,CAACH,GAAD,EAAM7C,IAAI,CAACuC,IAAX,CAAb;MACD;;MAED,IAAIU,SAAJ;MAEAjB,QAAQ,CAACkB,EAAT,CAAY,UAAZ,EAAwB,CAAC;QAAEtC;MAAF,CAAD,KAAkB;QACxCiC,GAAG,CAACM,gBAAJ,CAAqBvC,QAArB;;QACA,IAAIA,QAAQ,KAAK,SAAjB,EAA4B;UAC1BoC,aAAa,CAACH,GAAD,EAAM7C,IAAI,CAACuC,IAAL,IAAaC,iBAAnB,CAAb;QACD;MACF,CALD;MAOAR,QAAQ,CAACkB,EAAT,CAAY,SAAZ,EAAuB,CAAC;QAAEtC;MAAF,CAAD,KAAkB;QACvCiC,GAAG,CAACM,gBAAJ,CAAqBvC,QAArB;QACAiC,GAAG,CAACO,qBAAJ,CAA0B;UAAEC,MAAM,EAAE;QAAV,CAA1B,EAAkDzC,QAAlD;MACD,CAHD;MAKAoB,QAAQ,CAACkB,EAAT,CACE,MADF,EAEE,CAAC;QACCtC,QADD;QAEC0C;MAFD,CAAD,KAMM;QACJT,GAAG,CAACU,cAAJ,CAAmB3C,QAAnB;QACAqC,SAAS,GAAGK,KAAZ;QACAT,GAAG,CAACO,qBAAJ,CACE;UAAEC,MAAM,EAAE,OAAV;UAAmBG,IAAI,EAAEC,aAAa,CAACH,KAAD;QAAtC,CADF,EAEE1C,QAFF;MAID,CAfH;MAkBA,OAAO;QACLoB,QAAQ,EAAE;UACR0B,QAAQ,EAAE,OAAO9B,QAAP,EAAiBhB,QAAjB,EAA2B+C,YAA3B,KACR,CAAC,MAAM3B,QAAQ,CAAC0B,QAAT,CAAkB9B,QAAlB,EAA4BhB,QAA5B,EAAsC+C,YAAtC,CAAP,EAA4DC,IAFtD;UAGRC,WAAW,EAAGjC,QAAD,IAAcI,QAAQ,CAAC6B,WAAT,CAAqBjC,QAArB,CAHnB;UAIRkC,aAAa,EAAGC,GAAD,IAAS;YACtB,MAAMC,GAAG,GAAG,IAAIC,QAAJ,CAAQF,GAAR,EAAa,mBAAb,CAAZ;;YACA,IAAI,CAACC,GAAG,CAACE,YAAJ,CAAiBC,GAAjB,CAAqB,UAArB,CAAL,EAAuC;cACrC,MAAM,GAAGvD,QAAH,IAAe,eAAewD,IAAf,CAAoBJ,GAAG,CAACK,QAAxB,KAAqC,EAA1D;cACA,OAAOzD,QAAP;YACD;;YAED,OAAOiB,SAAP;UACD;QAZO,CADL;QAeLyC,YAAY,EAAE;UACZC,SAAS,EAAGC,OAAD,IAAa;YACtB,MAAM;cAAE5C,QAAF;cAAYhB;YAAZ,IAAyB6D,YAAY,CAACD,OAAD,CAA3C;YACA,OAAOxC,QAAQ,CAACuC,SAAT,CAAmB3C,QAAnB,EAA6BhB,QAA7B,CAAP;UACD,CAJW;UAKZ8D,YAAY,EAAGF,OAAD,IAAa;YACzB,MAAM;cAAE5C,QAAF;cAAYhB;YAAZ,IAAyB6D,YAAY,CAACD,OAAD,CAA3C;;YACA,IAAI,CAAC5D,QAAL,EAAe;cACb,MAAM,IAAI+D,KAAJ,CAAU,oCAAV,CAAN;YACD;;YAED,OAAO3C,QAAQ,CAAC0C,YAAT,CAAsB9C,QAAtB,EAAgChB,QAAhC,CAAP;UACD,CAZW;UAaZgE,kBAAkB,EAAGC,KAAD,IAAW;YAC7B;YACA,OAAO,CAAC,+BAA+BC,IAA/B,CAAoCD,KAAK,CAACE,IAA1C,CAAR;UACD;QAhBW,CAfT;QAiCLC,GAAG,EAAE;UACHC,UAAU,EAAE,MAAM,QADf;UAEHC,iBAAiB,EAAE,CAACtE,QAAD,EAAWuE,QAAX,KAAwB;YACzCtC,GAAG,CAACO,qBAAJ,CACE;cAAEC,MAAM,EAAE,MAAV;cAAkBG,IAAI,EAAEC,aAAa,CAACR,SAAD;YAArC,CADF,EAEErC,QAFF,EAGE,CAACuE,QAAD,CAHF;UAKD;QARE,CAjCA;QA2CLC,QAAQ,EAAE;UACRC,QAAQ,EAAE,MAAM,kCADR;UAERC,SAAS,EAAE,MAAM;QAFT,CA3CL;QA+CLC,MAAM,EAAE;UACNC,SAAS,EAAGC,GAAD,IAAS;YAClB,MAAMC,QAAQ,GAAG,IAAAC,mCAAA,EAA2BF,GAA3B,CAAjB;YACAC,QAAQ,CAACE,MAAT,GAAkB,WAAlB;YACAxE,QAAQ,CAACP,OAAT,CAAiB6E,QAAjB;UACD;QALK,CA/CH;QAsDLG,GAAG,EAAE;UACHC,YAAY,EAAE,YAAYC,MAAM,CAACC,IAAP,CAAYhE,QAAQ,CAACiE,OAArB,CADvB;UAEHC,SAAS,EAAE,MAAOtF,QAAP,IACTmF,MAAM,CAACI,OAAP,CAAenE,QAAQ,CAACoE,WAAT,CAAqBxF,QAArB,KAAkC,EAAjD,EAAqDyF,GAArD,CACE,CAAC,CAACC,IAAD,EAAOC,KAAP,CAAD,MAAoB;YAClBD,IADkB;YAElBE,IAAI,EAAED,KAAK,CAACE,IAAN,CAAWD;UAFC,CAApB,CADF,CAHC;UASHE,mBAAmB,EAAE,MAAO9F,QAAP,IACnBoB,QAAQ,CAAC2E,UAAT,CAAoB/F,QAApB,KAAiC;QAVhC;MAtDA,CAAP;IAmED;EAxHwC,CAAD,CAA1C;EA2HA,MAAMf,KAAK,EAAX;EAEA,OAAO;IACLsC,IAAI,EAAE,YAAY;MAChBf,QAAQ,CAACe,IAAT;MACA,MAAMA,IAAI,EAAV;IACD;EAJI,CAAP;AAMD;;AAED,SAASY,iBAAT,CAA2BF,GAA3B,EAAwD;EACtD,IAAI,CAAChC,OAAO,CAAC+F,KAAR,CAAcC,UAAnB,EAA+B;IAC7BhE,GAAG,CAAC4C,GAAJ,CAAQqB,IAAR,CAAa;MACXC,GAAG,EAAE;IADM,CAAb;IAGA;EACD;;EAEDC,iBAAA,CAASC,kBAAT,CAA4BpG,OAAO,CAAC+F,KAApC;;EACA/F,OAAO,CAAC+F,KAAR,CAAcC,UAAd,CAAyB,IAAzB;EAEAhG,OAAO,CAAC+F,KAAR,CAAc1D,EAAd,CAAiB,UAAjB,EAA6B,CAACgE,IAAD,EAAOtD,IAAP,KAAgB;IAC3C,MAAM;MAAEuD,IAAF;MAAQb;IAAR,IAAiB1C,IAAvB;;IACA,IAAIuD,IAAI,KAAK,IAAb,EAAmB;MACjB,QAAQb,IAAR;QACE,KAAK,GAAL;UACEzF,OAAO,CAACuG,IAAR;UACA;;QACF,KAAK,GAAL;UACEvG,OAAO,CAACwG,IAAR,CAAa,SAAb,EAAwB,SAAxB;UACA;MANJ;IAQD,CATD,MASO,IAAIf,IAAI,KAAK,GAAb,EAAkB;MACvBzD,GAAG,CAACyE,yBAAJ,CAA8B;QAAEC,MAAM,EAAE;MAAV,CAA9B;MACA1E,GAAG,CAAC4C,GAAJ,CAAQgB,IAAR,CAAa;QACXM,GAAG,EAAE;MADM,CAAb;IAGD,CALM,MAKA,IAAIT,IAAI,KAAK,GAAb,EAAkB;MACvBzD,GAAG,CAACyE,yBAAJ,CAA8B;QAAEC,MAAM,EAAE;MAAV,CAA9B;MACA1E,GAAG,CAAC4C,GAAJ,CAAQgB,IAAR,CAAa;QACXM,GAAG,EAAE;MADM,CAAb;IAGD;EACF,CAtBD;AAuBD;;AAED,eAAe/D,aAAf,CAA6BH,GAA7B,EAA0DN,IAA1D,EAAwE;EACtE,MAAMiF,OAAO,GAAG3G,OAAO,CAAC4G,GAAR,CAAYC,YAAZ,GACX,GAAE7G,OAAO,CAAC4G,GAAR,CAAYC,YAAa,qBADhB,GAEZ,KAFJ;EAGA,MAAMhH,OAAO,GAAI,GAAE8G,OAAQ,gBAAejF,IAAK,QAAOA,IAAK,EAA3D;;EACA,IAAI;IACF,MAAMoF,cAAA,CAAMjH,OAAN,CAAcA,OAAd,CAAN;IACAmC,GAAG,CAAC4C,GAAJ,CAAQgB,IAAR,CAAc,qBAAoB/F,OAAQ,EAA1C;EACD,CAHD,CAGE,OAAOkH,KAAP,EAAc;IACd;IACA,MAAMC,OAAO,GACVD,KAAD,CAAiBC,OAAjB,CAAyBC,KAAzB,CAA+B,QAA/B,EAAyC,CAAzC,KAAgDF,KAAD,CAAiBC,OADlE;IAEAhF,GAAG,CAAC4C,GAAJ,CAAQqB,IAAR,CAAc,kBAAiBpG,OAAQ,MAAKmH,OAAO,CAACE,IAAR,EAAe,EAA3D;EACD;AACF;;AAED,SAAStD,YAAT,CAAsBD,OAAtB,EAAuC;EACrC,MAAM;IAAEH,QAAQ,EAAEzC,QAAZ;IAAsBsC;EAAtB,IAAuC,IAAID,QAAJ,CAAQO,OAAR,CAA7C;EACA,IAAI5D,QAAQ,GAAGsD,YAAY,CAACC,GAAb,CAAiB,UAAjB,CAAf;;EACA,IAAI,CAACvD,QAAL,EAAe;IACb,MAAM,GAAGoH,cAAH,EAAmB1B,IAAnB,IAA2B1E,QAAQ,CAACkG,KAAT,CAAe,GAAf,EAAoBG,OAApB,EAAjC;;IACA,IAAI3B,IAAI,KAAKzE,SAAb,EAAwB;MACtBjB,QAAQ,GAAGoH,cAAX;IACD;EACF;;EAED,OAAO;IACLpG,QAAQ,EAAEA,QAAQ,CAACsG,OAAT,CAAiB,KAAjB,EAAwB,EAAxB,CADL;IAELtH,QAAQ,EAAEA,QAAQ,IAAIiB;EAFjB,CAAP;AAID;;AAED,SAAS4B,aAAT,CACEH,KADF,EAEyB;EACvB,IAAI,CAACA,KAAL,EAAY;IACV,OAAO,IAAP;EACD;;EAED,MAAM6E,OAA+B,GAAG,EAAxC;;EACA,KAAK,MAAMC,MAAX,IAAqB9E,KAAK,CAAC6E,OAAN,IAAiB,EAAtC,EAA0C;IACxC,MAAM;MAAEE,UAAF;MAAc/B;IAAd,IAAuB8B,MAA7B;;IACA,IAAIC,UAAU,KAAKxG,SAAf,IAA4ByE,IAAhC,EAAsC;MACpC6B,OAAO,CAACE,UAAD,CAAP,GAAsB/B,IAAtB;IACD;EACF;;EAED,OAAO;IACLA,IAAI,EAAEhD,KAAK,CAACgD,IAAN,IAAc,EADf;IAELgC,IAAI,EAAEhF,KAAK,CAACgF,IAAN,IAAc,CAFf;IAGLC,IAAI,EAAEjF,KAAK,CAACiF,IAAN,IAAc,EAHf;IAILC,QAAQ,EAAElF,KAAK,CAACkF,QAAN,IAAkB,EAJvB;IAKLC,MAAM,EAAEnF,KAAK,CAACmF,MAAN,IAAgB,EALnB;IAMLN;EANK,CAAP;AAQD"}