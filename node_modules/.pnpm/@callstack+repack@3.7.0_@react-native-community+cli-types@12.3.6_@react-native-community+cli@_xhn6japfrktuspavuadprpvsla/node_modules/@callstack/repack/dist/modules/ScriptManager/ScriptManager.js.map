{"version":3,"file":"ScriptManager.js","names":["EventEmitter","NativeModules","getWebpackContext","Script","CACHE_KEY","__DEV__","ScriptManager","shared","__webpack_require__","repack","scriptManager","cache","cacheInitialized","resolvers","constructor","nativeScriptManager","Error","loadScriptCallback","push","parentPush","data","scriptId","caller","emit","bind","__destroy","undefined","Array","prototype","setStorage","storage","addResolver","resolver","priority","concat","sort","a","b","removeResolver","index","findIndex","item","splice","removeAllResolvers","initCache","JSON","parse","getItem","saveCache","setItem","stringify","handleError","error","message","args","console","originalError","resolveScript","webpackContext","length","locator","resolve","url","script","from","cacheKey","shouldUpdateScript","fetch","shouldUpdateCache","getCacheData","toObject","shouldRefetch","loadScript","Promise","reject","onLoaded","on","code","removeListener","catch","prefetchScript","invalidateScripts","scriptIds","ids","Object","keys"],"sources":["../../../src/modules/ScriptManager/ScriptManager.ts"],"sourcesContent":["/* globals __DEV__, __webpack_require__ */\nimport EventEmitter from 'events';\nimport { NativeModules } from 'react-native';\nimport { getWebpackContext } from './getWebpackContext';\nimport { Script } from './Script';\nimport type {\n  NormalizedScriptLocator,\n  ScriptLocatorResolver,\n  StorageApi,\n} from './types';\n\ntype Cache = Record<\n  string,\n  Pick<NormalizedScriptLocator, 'method' | 'url' | 'query' | 'headers' | 'body'>\n>;\n\nconst CACHE_KEY = `Repack.ScriptManager.Cache.v3.${\n  __DEV__ ? 'debug' : 'release'\n}`;\n\n/* Options for resolver when adding it to a `ScriptManager`. */\nexport interface ResolverOptions {\n  /**\n   * Priority of the resolver. Defaults to `2`.\n   * Resolvers are called based on the highest priority,\n   * so higher the number, the higher priority the resolver gets.\n   */\n  priority?: number;\n}\n\n/**\n * A manager to ease resolution, downloading and executing additional code from:\n * - arbitrary JavaScript scripts\n * - Webpack chunks\n * - Webpack bundles\n * - Webpack MF containers\n *\n * ScriptManager is globally available under `ScriptManager.shared` in main bundle, chunks and containers.\n *\n * Use `ScriptManager.shared` instead of creating new instance of `ScriptManager`.\n *\n * This API is mainly useful, if you are working with any form of Code Splitting.\n *\n * `ScriptManager` is also an `EventEmitter` and emits the following events:\n * - `resolving` with `{ scriptId, caller }`\n * - `resolved` with `scriptId: string, caller?: string, locator: NormalizedScriptLocator, cache: boolean`\n * - `prefetching` with `scriptId: string, caller?: string, locator: NormalizedScriptLocator, cache: boolean`\n * - `loading` with `scriptId: string, caller?: string, locator: NormalizedScriptLocator, cache: boolean`\n * - `loaded` with `scriptId: string, caller?: string, locator: NormalizedScriptLocator, cache: boolean`\n * - `error` with `error: Error`\n *\n * Example of using this API with async Webpack chunk:\n * ```js\n * import * as React from 'react';\n * import { ScriptManager, Script } from '@callstack/repack/client';\n *\n * ScriptManager.shared.addResolver(async (scriptId) => {\n *   if (__DEV__) {\n *     return {\n *       url: Script.getDevServerURL(scriptId);\n *       cache: false,\n *     };\n *   }\n *\n *   return {\n *     url: Script.getRemoteURL(`http://domain.exaple/apps/${scriptId}`),\n *   };\n * });\n *\n * // ScriptManager.shared.loadScript is called internally when running `import()`\n * const TeacherModule = React.lazy(() => import('./Teacher.js'));\n * const StudentModule = React.lazy(() => import('./Student.js'));\n *\n * export function App({ role }) {\n *   if (role === 'teacher') {\n *     return <TeacherModule />;\n *   }\n *\n *   return <StudentModule />\n * }\n * ```\n */\nexport class ScriptManager extends EventEmitter {\n  static get shared(): ScriptManager {\n    if (!__webpack_require__.repack.shared.scriptManager) {\n      __webpack_require__.repack.shared.scriptManager = new ScriptManager();\n    }\n    return __webpack_require__.repack.shared.scriptManager;\n  }\n\n  protected cache: Cache = {};\n  protected cacheInitialized = false;\n  protected resolvers: [number, ScriptLocatorResolver][] = [];\n  protected storage?: StorageApi;\n\n  /**\n   * Constructs instance of `ScriptManager`.\n   *\n   * __Should not be called directly__ - use `ScriptManager.shared`.\n   *\n   * @internal\n   */\n  protected constructor(\n    private nativeScriptManager = NativeModules.ScriptManager\n  ) {\n    super();\n\n    if (!nativeScriptManager) {\n      throw new Error(\n        'repack react-native module was not found.' +\n          (__DEV__ ? ' Did you forget to update native dependencies?' : '')\n      );\n    }\n\n    if (__webpack_require__.repack.shared.scriptManager) {\n      throw new Error(\n        'ScriptManager was already instantiated. Use ScriptManager.shared instead.'\n      );\n    }\n\n    __webpack_require__.repack.shared.loadScriptCallback.push = ((\n      parentPush: typeof Array.prototype.push,\n      ...data: string[][]\n    ) => {\n      const [[scriptId, caller]] = data;\n      this.emit('__loaded__', { scriptId, caller });\n      return parentPush(...data);\n    }).bind(\n      null,\n      __webpack_require__.repack.shared.loadScriptCallback.push.bind(\n        __webpack_require__.repack.shared.loadScriptCallback\n      )\n    );\n\n    __webpack_require__.repack.shared.scriptManager = this;\n  }\n\n  __destroy() {\n    __webpack_require__.repack.shared.scriptManager = undefined;\n    __webpack_require__.repack.shared.loadScriptCallback.push =\n      Array.prototype.push.bind(\n        __webpack_require__.repack.shared.loadScriptCallback\n      );\n  }\n\n  /**\n   * Sets a storage backend to cache resolved scripts locator data.\n   *\n   * The stored data is used to detect if scripts locator data of previously downloaded\n   * script hasn't changed to avoid over-fetching the script.\n   *\n   * @param storage Implementation of storage functions.\n   */\n  setStorage(storage?: StorageApi) {\n    this.storage = storage;\n  }\n\n  /**\n   * Adds new script locator resolver.\n   *\n   * Resolver is an async function to resolve script locator data - in other words, it's a function to\n   * tell the {@link ScriptManager} how to fetch the script.\n   *\n   * There's no limitation on what logic you can run inside this function - it can include:\n   * - fetching/loading remote config\n   * - fetching/loading feature flags\n   * - fetching/loading A/B testing data\n   * - calling native modules\n   * - running arbitrary logic\n   *\n   * @param resolver Resolver function to add.\n   * @param options Resolver options.\n   */\n  addResolver(\n    resolver: ScriptLocatorResolver,\n    { priority = 2 }: ResolverOptions = {}\n  ) {\n    this.resolvers = this.resolvers\n      .concat([[priority, resolver]])\n      .sort(([a], [b]) => b - a);\n  }\n\n  /**\n   * Removes previously added resolver.\n   *\n   * @param resolver Resolver function to remove.\n   * @returns `true` if resolver was found and removed, `false` otherwise.\n   */\n  removeResolver(resolver: ScriptLocatorResolver): boolean {\n    const index = this.resolvers.findIndex(([, item]) => item === resolver);\n    if (index > -1) {\n      this.resolvers.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Removes all previously added resolvers.\n   */\n  removeAllResolvers() {\n    this.resolvers = [];\n  }\n\n  protected async initCache() {\n    if (!this.cacheInitialized) {\n      const cache: Cache | null | undefined = JSON.parse(\n        (await this.storage?.getItem(CACHE_KEY)) ?? '{}'\n      );\n      this.cache = cache ?? {};\n      this.cacheInitialized = true;\n    }\n  }\n\n  protected async saveCache() {\n    await this.storage?.setItem(CACHE_KEY, JSON.stringify(this.cache));\n  }\n\n  protected handleError(error: any, message: string, ...args: any[]): never {\n    console.error(message, ...args, { originalError: error });\n    this.emit('error', { message, args, originalError: error });\n    throw error;\n  }\n\n  /**\n   * Resolves a {@link Script} instance with normalized locator data.\n   *\n   * Resolution will use previously added (via `ScriptManager.shared.addResolver(...)`) resolvers\n   * in series, util one returns a locator data or will throw if no resolver handled the request.\n   *\n   * Use `ScriptManager.shared.on('resolving', ({ scriptId, caller }) => { })` to listen for when\n   * the script resolution begins.\n   *\n   * Use `ScriptManager.shared.on('resolved', (script) => { })` to listen for when\n   * the script's locator data is resolved.\n   *\n   * @param scriptId Id of the script to resolve.\n   * @param caller Name of the calling script - it can be for example: name of the bundle, chunk or container.\n   */\n  async resolveScript(\n    scriptId: string,\n    caller?: string,\n    webpackContext = getWebpackContext()\n  ): Promise<Script> {\n    await this.initCache();\n    try {\n      if (!this.resolvers.length) {\n        throw new Error(\n          'No script resolvers were added. Did you forget to call `ScriptManager.shared.addResolver(...)`?'\n        );\n      }\n\n      this.emit('resolving', { scriptId, caller });\n\n      let locator;\n      for (const [, resolve] of this.resolvers) {\n        locator = await resolve(scriptId, caller);\n        if (locator) {\n          break;\n        }\n      }\n\n      if (!locator) {\n        throw new Error(`No resolver was able to resolve script ${scriptId}`);\n      }\n\n      if (typeof locator.url === 'function') {\n        locator.url = locator.url(webpackContext);\n      }\n\n      const script = Script.from({ scriptId, caller }, locator, false);\n      const cacheKey = `${scriptId}_${caller ?? 'unknown'}`;\n\n      // Check if user provided a custom shouldUpdateScript function\n      if (locator.shouldUpdateScript) {\n        // If so, we need to wait for it to resolve\n        const fetch = await locator.shouldUpdateScript(\n          scriptId,\n          caller,\n          script.shouldUpdateCache(this.cache[cacheKey])\n        );\n\n        // If it returns true, we need to fetch the script\n        if (fetch) {\n          script.locator.fetch = true;\n          this.cache[cacheKey] = script.getCacheData();\n          await this.saveCache();\n        }\n\n        this.emit('resolved', script.toObject());\n\n        // if it returns false, we don't need to fetch the script\n        return script;\n      }\n\n      // If no custom shouldUpdateScript function was provided, we use the default behaviour\n      if (!this.cache[cacheKey]) {\n        script.locator.fetch = true;\n        this.cache[cacheKey] = script.getCacheData();\n        await this.saveCache();\n      } else if (script.shouldRefetch(this.cache[cacheKey])) {\n        script.locator.fetch = true;\n        this.cache[cacheKey] = script.getCacheData();\n        await this.saveCache();\n      }\n\n      this.emit('resolved', script.toObject());\n\n      return script;\n    } catch (error) {\n      this.handleError(\n        error,\n        '[ScriptManager] Failed while resolving script locator:',\n        { scriptId, caller }\n      );\n    }\n  }\n\n  /**\n   * Resolves given script's location, downloads and executes it.\n   * The execution of the code is handled internally by threading in React Native.\n   *\n   * Use `ScriptManager.shared.on('loading', (script) => { })` to listen for when\n   * the script is about to be loaded.\n   *\n   * Use `ScriptManager.shared.on('loaded', (script) => { })` to listen for when\n   * the script is loaded.\n   *\n   * @param scriptId Id of the script to load.\n   * @param caller Name of the calling script - it can be for example: name of the bundle, chunk or container.\n   */\n  async loadScript(\n    scriptId: string,\n    caller?: string,\n    webpackContext = getWebpackContext()\n  ) {\n    let script = await this.resolveScript(scriptId, caller, webpackContext);\n    return await new Promise<void>((resolve, reject) => {\n      (async () => {\n        const onLoaded = (data: { scriptId: string; caller?: string }) => {\n          if (data.scriptId === scriptId && data.caller === caller) {\n            this.emit('loaded', script.toObject());\n            resolve();\n          }\n        };\n\n        try {\n          this.emit('loading', script.toObject());\n          this.on('__loaded__', onLoaded);\n          await this.nativeScriptManager.loadScript(scriptId, script.locator);\n        } catch (error) {\n          const { code } = error as Error & { code: string };\n          this.handleError(\n            error,\n            '[ScriptManager] Failed to load script:',\n            code ? `[${code}]` : '',\n            script.toObject()\n          );\n        } finally {\n          this.removeListener('__loaded__', onLoaded);\n        }\n      })().catch((error) => {\n        reject(error);\n      });\n    });\n  }\n\n  /**\n   * Resolves given script's location and downloads it without executing.\n   * This function can be awaited to detect if the script was downloaded and for error handling.\n   *\n   * Use `ScriptManager.shared.on('prefetching', (script) => { })` to listen for when\n   * the script's prefetch beings.\n   *\n   * @param scriptId Id of the script to prefetch.\n   * @param caller Name of the calling script - it can be for example: name of the bundle, chunk or container.\n   */\n  async prefetchScript(\n    scriptId: string,\n    caller?: string,\n    webpackContext = getWebpackContext()\n  ) {\n    let script = await this.resolveScript(scriptId, caller, webpackContext);\n\n    try {\n      this.emit('prefetching', script.toObject());\n      await this.nativeScriptManager.prefetchScript(scriptId, script.locator);\n    } catch (error) {\n      const { code } = error as Error & { code: string };\n      this.handleError(\n        error,\n        '[ScriptManager] Failed to prefetch script:',\n        code ? `[${code}]` : '',\n        script.toObject()\n      );\n    }\n  }\n\n  /**\n   * Clears the cache (if configured in {@link ScriptManager.setStorage}) and removes downloaded\n   * files for given scripts from the filesystem. This function can be awaited to detect if the\n   * scripts were invalidated and for error handling.\n   *\n   * Use `ScriptManager.shared.on('invalidated', (scriptIds) => { })` to listen for when\n   * the invalidation completes.\n   *\n   * @param scriptIds Array of script ids to clear from cache and remove from filesystem.\n   */\n  async invalidateScripts(scriptIds: string[] = []) {\n    try {\n      await this.initCache();\n      const ids = scriptIds ?? Object.keys(this.cache);\n\n      for (const scriptId of ids) {\n        delete this.cache[scriptId];\n      }\n      await this.saveCache();\n\n      await this.nativeScriptManager.invalidateScripts(ids);\n      this.emit('invalidated', ids);\n    } catch (error) {\n      const { code } = error as Error & { code: string };\n      this.handleError(\n        error,\n        '[ScriptManager] Failed to invalidate scripts:',\n        code ? `[${code}]` : ''\n      );\n    }\n  }\n}\n"],"mappings":"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"}