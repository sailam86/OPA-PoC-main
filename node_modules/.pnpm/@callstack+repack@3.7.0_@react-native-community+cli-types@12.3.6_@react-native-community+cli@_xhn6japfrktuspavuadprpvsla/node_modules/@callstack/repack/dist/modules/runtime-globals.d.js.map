{"version":3,"file":"runtime-globals.d.js","names":[],"sources":["../../src/modules/runtime-globals.d.ts"],"sourcesContent":["/// <reference lib=\"DOM\" />\n\ndeclare interface LoadScriptEvent {\n  type: 'load' | string;\n  target?: { src: string };\n}\n\ndeclare interface RepackRuntime {\n  loadScript: (\n    name: string,\n    caller: string | undefined,\n    done: (event?: LoadScriptEvent) => void\n  ) => void;\n  loadHotUpdate: (url: string, done: (event?: LoadScriptEvent) => void) => void;\n  shared: {\n    loadScriptCallback: string[][];\n    scriptManager?: import('./ScriptManager').ScriptManager;\n  };\n}\n\ndeclare var __DEV__: boolean;\ndeclare var __PUBLIC_PORT__: number;\ndeclare var __PLATFORM__: string;\ndeclare var __webpack_public_path__: string;\ndeclare var __webpack_hash__: string;\ndeclare var __repack__: RepackRuntime;\ndeclare var __webpack_require__: import('./ScriptManager').WebpackContext & {\n  x?: Function;\n  repack: RepackRuntime;\n};\n\ninterface HMRInfo {\n  type: string;\n  chain: Array<string | number>;\n  error?: Error;\n  moduleId: string | number;\n}\n\ninterface HotApi {\n  status():\n    | 'idle'\n    | 'check'\n    | 'prepare'\n    | 'ready'\n    | 'dispose'\n    | 'apply'\n    | 'abort'\n    | 'fail';\n  check(autoPlay: boolean): Promise<Array<string | number>>;\n  apply(options: {\n    ignoreUnaccepted?: boolean;\n    ignoreDeclined?: boolean;\n    ignoreErrored?: boolean;\n    onDeclined?: (info: HMRInfo) => void;\n    onUnaccepted?: (info: HMRInfo) => void;\n    onAccepted?: (info: HMRInfo) => void;\n    onDisposed?: (info: HMRInfo) => void;\n    onErrored?: (info: HMRInfo) => void;\n  }): Promise<Array<string | number>>;\n}\n\ninterface NodeModule {\n  hot?: HotApi;\n}\n"],"mappings":""}