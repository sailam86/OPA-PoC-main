"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.composeSourceMaps = void 0;

var _path = _interopRequireDefault(require("path"));

var _fsExtra = _interopRequireDefault(require("fs-extra"));

var _execa = _interopRequireDefault(require("execa"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Composes source maps generated by webpack-bundle and Hermes.
 *
 * Removes original source map files.
 */
const composeSourceMaps = async ({
  reactNativePath,
  packagerMapPath,
  compilerMapPath
}) => {
  const composedSourceMapPath = packagerMapPath + '.composed';

  try {
    await (0, _execa.default)('node', [_path.default.join(reactNativePath, 'scripts/compose-source-maps.js'), packagerMapPath, compilerMapPath, '-o', composedSourceMapPath]); // Remove intermediate files

    await _fsExtra.default.unlink(packagerMapPath);
    await _fsExtra.default.unlink(compilerMapPath);
    await _fsExtra.default.rename(composedSourceMapPath, packagerMapPath);
  } catch (error) {
    const message = error.toString();
    throw new Error(`ChunksToHermesBytecodePlugin: Failed to compose source maps. Reason:\n${message})`);
  }
};

exports.composeSourceMaps = composeSourceMaps;
//# sourceMappingURL=composeSourceMaps.js.map