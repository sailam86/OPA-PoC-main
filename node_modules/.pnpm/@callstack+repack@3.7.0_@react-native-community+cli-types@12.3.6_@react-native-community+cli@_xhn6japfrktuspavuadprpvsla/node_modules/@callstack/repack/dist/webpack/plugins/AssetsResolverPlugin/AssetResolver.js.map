{"version":3,"file":"AssetResolver.js","names":["AssetResolver","collectScales","scalableAssetExtensions","files","name","type","platform","regex","includes","RegExp","escapeStringRegexp","priority","queryPlatform","indexOf","output","file","match","exec","scale","constructor","config","compiler","apply","resolver","test","getAssetExtensionsRegExp","extensions","logger","getInfrastructureLogger","getHook","tapAsync","request","_context","callback","requestPath","path","debug","fileSystem","readdir","dirname","error","results","basename","replace","extname","substring","filter","result","resolved","undefined","map","scalableExtensions","key","Object","keys","sort","a","b","Number","resolve","scales","resolvedFile","relativePath","join"],"sources":["../../../../src/webpack/plugins/AssetsResolverPlugin/AssetResolver.ts"],"sourcesContent":["import path from 'path';\nimport escapeStringRegexp from 'escape-string-regexp';\nimport webpack from 'webpack';\nimport { HookMap, SyncHook } from 'tapable';\nimport { getAssetExtensionsRegExp } from '../../utils/assetExtensions';\n\n/**\n * {@link AssetResolver} configuration options.\n */\nexport interface AssetResolverConfig {\n  /**\n   * Override default asset extensions. If the asset matches one of the extensions, it will be process\n   * by the custom React Native asset resolver. Otherwise, the resolution will process normally and\n   * the asset will be handled by Webpack.\n   */\n  extensions?: string[];\n\n  /**\n   * Override default scalable extensions, which processes only scalable assets like images\n   * to create a map of DPI variants of the asset.\n   */\n  scalableExtensions?: string[];\n\n  /** Target application platform. */\n  platform: string;\n}\n\nexport interface CollectedScales {\n  [key: string]: {\n    platform: string;\n    name: string;\n  };\n}\n\ninterface CollectOptions {\n  name: string;\n  platform: string;\n  type: string;\n}\n\n// Resolver is not directly exposed from webpack types so we need to do some TS trickery to\n// get the type.\ntype Resolver =\n  webpack.Compiler['resolverFactory']['hooks']['resolver'] extends HookMap<\n    infer H\n  >\n    ? H extends SyncHook<infer S>\n      ? S extends any[]\n        ? S[0]\n        : never\n      : never\n    : never;\n\nexport class AssetResolver {\n  static collectScales(\n    scalableAssetExtensions: string[],\n    files: string[],\n    { name, type, platform }: CollectOptions\n  ): CollectedScales {\n    const regex = scalableAssetExtensions.includes(type)\n      ? new RegExp(\n          `^${escapeStringRegexp(\n            name\n          )}(@\\\\d+(\\\\.\\\\d+)?x)?(\\\\.(${platform}|native))?.${escapeStringRegexp(\n            type\n          )}$`\n        )\n      : new RegExp(\n          `^${escapeStringRegexp(name)}(\\\\.(${platform}|native))?\\\\.${type}$`\n        );\n\n    const priority = (queryPlatform: string) =>\n      ['native', platform].indexOf(queryPlatform);\n\n    // Build a map of files according to the scale\n    const output: CollectedScales = {};\n    for (const file of files) {\n      const match = regex.exec(file);\n      if (match) {\n        let [, scale, , , platform] = match;\n        scale = scale || '@1x';\n        if (\n          !output[scale] ||\n          priority(platform) > priority(output[scale].platform)\n        ) {\n          output[scale] = { platform, name: file };\n        }\n      }\n    }\n\n    return output;\n  }\n\n  constructor(\n    public readonly config: AssetResolverConfig,\n    private compiler: webpack.Compiler\n  ) {}\n\n  apply(resolver: Resolver) {\n    const platform = this.config.platform;\n    const test = getAssetExtensionsRegExp(this.config.extensions!);\n\n    const logger = this.compiler.getInfrastructureLogger('RepackAssetResolver');\n\n    resolver\n      .getHook('file')\n      .tapAsync('RepackAssetResolver', (request, _context, callback) => {\n        const requestPath = request.path;\n        if (\n          (typeof requestPath === 'string' && !test.test(requestPath)) ||\n          requestPath === false\n        ) {\n          callback();\n          return;\n        }\n\n        logger.debug('Processing asset:', requestPath);\n\n        resolver.fileSystem.readdir(\n          path.dirname(requestPath),\n          (error, results) => {\n            if (error) {\n              callback();\n              return;\n            }\n\n            const basename = path.basename(requestPath);\n            const name = basename.replace(/\\.[^.]+$/, '');\n            const type = path.extname(requestPath).substring(1);\n            const files = ((results as Array<string | Buffer>)?.filter(\n              (result) => typeof result === 'string'\n            ) ?? []) as string[];\n\n            let resolved = files.includes(basename) ? requestPath : undefined;\n\n            if (!resolved) {\n              const map = AssetResolver.collectScales(\n                this.config.scalableExtensions!,\n                files,\n                {\n                  name,\n                  type,\n                  platform,\n                }\n              );\n              const key = map['@1x']\n                ? '@1x'\n                : Object.keys(map).sort(\n                    (a, b) =>\n                      Number(a.replace(/[^\\d.]/g, '')) -\n                      Number(b.replace(/[^\\d.]/g, ''))\n                  )[0];\n\n              resolved = map[key]?.name\n                ? path.resolve(path.dirname(requestPath), map[key].name)\n                : undefined;\n\n              if (!resolved) {\n                logger.error('Cannot resolve:', requestPath, {\n                  files,\n                  scales: map,\n                });\n                callback();\n                return;\n              }\n            }\n\n            const resolvedFile = {\n              ...request,\n              path: resolved,\n              relativePath:\n                request.relativePath &&\n                resolver.join(request.relativePath, resolved),\n              file: true,\n            };\n\n            logger.debug('Asset resolved:', requestPath, '->', resolved);\n\n            callback(null, resolvedFile);\n          }\n        );\n      });\n  }\n}\n"],"mappings":"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"}