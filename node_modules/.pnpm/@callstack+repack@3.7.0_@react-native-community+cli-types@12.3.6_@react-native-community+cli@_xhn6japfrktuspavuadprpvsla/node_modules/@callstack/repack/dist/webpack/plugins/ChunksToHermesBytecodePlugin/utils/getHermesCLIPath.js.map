{"version":3,"file":"getHermesCLIPath.js","names":["getHermesOSBin","os","platform","getHermesCLIPath","reactNativePath","osBin","Error","path","join"],"sources":["../../../../../src/webpack/plugins/ChunksToHermesBytecodePlugin/utils/getHermesCLIPath.ts"],"sourcesContent":["import path from 'path';\nimport os from 'os';\n\n/**\n * Folder name of the Hermes compiler binary for the current OS.\n */\nconst getHermesOSBin = (): string | null => {\n  switch (os.platform()) {\n    case 'darwin':\n      return 'osx-bin';\n    case 'linux':\n      return 'linux64-bin';\n    case 'win32':\n      return 'win64-bin';\n    default:\n      return null;\n  }\n};\n\n/**\n * Determines the path to the Hermes compiler binary.\n *\n * Defaults to './node_modules/react-native/sdks/hermesc/{os-bin}/hermesc'\n */\nexport const getHermesCLIPath = (reactNativePath: string): string => {\n  const osBin = getHermesOSBin();\n\n  if (!osBin) {\n    throw new Error(\n      'ChunksToHermesBytecodePlugin: OS not recognized. Please set hermesCLIPath to the path of a working Hermes compiler.'\n    );\n  }\n\n  return path.join(reactNativePath, 'sdks', 'hermesc', osBin, 'hermesc');\n};\n"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA;AACA;AACA;AACA,MAAMA,cAAc,GAAG,MAAqB;EAC1C,QAAQC,WAAA,CAAGC,QAAH,EAAR;IACE,KAAK,QAAL;MACE,OAAO,SAAP;;IACF,KAAK,OAAL;MACE,OAAO,aAAP;;IACF,KAAK,OAAL;MACE,OAAO,WAAP;;IACF;MACE,OAAO,IAAP;EARJ;AAUD,CAXD;AAaA;AACA;AACA;AACA;AACA;;;AACO,MAAMC,gBAAgB,GAAIC,eAAD,IAAqC;EACnE,MAAMC,KAAK,GAAGL,cAAc,EAA5B;;EAEA,IAAI,CAACK,KAAL,EAAY;IACV,MAAM,IAAIC,KAAJ,CACJ,qHADI,CAAN;EAGD;;EAED,OAAOC,aAAA,CAAKC,IAAL,CAAUJ,eAAV,EAA2B,MAA3B,EAAmC,SAAnC,EAA8CC,KAA9C,EAAqD,SAArD,CAAP;AACD,CAVM"}