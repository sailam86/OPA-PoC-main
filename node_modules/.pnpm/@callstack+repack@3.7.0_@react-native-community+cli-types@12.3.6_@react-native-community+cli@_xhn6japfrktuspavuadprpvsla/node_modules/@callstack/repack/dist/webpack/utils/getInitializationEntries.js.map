{"version":3,"file":"getInitializationEntries.js","names":["getInitializationEntries","reactNativePath","options","initializeCoreLocation","hmr","getPolyfills","require","path","join","entries","resolve","push"],"sources":["../../../src/webpack/utils/getInitializationEntries.ts"],"sourcesContent":["import path from 'path';\n\n/**\n * {@link getInitializationEntries} options.\n */\nexport interface InitializationEntriesOptions {\n  /**\n   * Absolute location to JS file with initialization logic for React Native.\n   * Useful if you want to built for out-of-tree platforms.\n   */\n  initializeCoreLocation?: string;\n  /**\n   * Whether Hot Module Replacement entry should be enabled. Defaults to `true`.\n   */\n  hmr?: boolean;\n}\n\n/**\n * Get setup and initialization entires for Webpack configuration's `entry` field.\n * The returned entires should be added before your project entry.\n *\n * @param reactNativePath Absolute path to directory with React Native dependency.\n * @param options Additional options that can modify returned entires.\n * @returns Array of entires.\n *\n * @category Webpack util\n *\n * @example Usage in Webpack config:\n * ```ts\n * import * as Repack from '@callstack/repack';\n *\n * export default (env) => {\n *   const {\n *     devServer,\n *     reactNativePath = new URL('./node_modules/react-native', import.meta.url)\n *       .pathname,\n *   } = env;\n *\n *   return {\n *     entry: [\n *       ...Repack.getInitializationEntries(reactNativePath, {\n *         hmr: devServer && devServer.hmr,\n *       }),\n *       entry,\n *     ],\n *   };\n * };\n * ```\n */\nexport function getInitializationEntries(\n  reactNativePath: string,\n  options: InitializationEntriesOptions = {}\n): string[] {\n  const { initializeCoreLocation, hmr } = options;\n\n  const getPolyfills = require(path.join(\n    reactNativePath,\n    'rn-get-polyfills.js'\n  ));\n\n  const entries = [\n    ...getPolyfills(),\n    initializeCoreLocation ||\n      path.join(reactNativePath, 'Libraries/Core/InitializeCore.js'),\n    require.resolve('../../modules/configurePublicPath'),\n  ];\n\n  if (hmr) {\n    entries.push(require.resolve('../../modules/WebpackHMRClient'));\n  }\n\n  return entries;\n}\n"],"mappings":";;;;;;;AAAA;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,wBAAT,CACLC,eADK,EAELC,OAAqC,GAAG,EAFnC,EAGK;EACV,MAAM;IAAEC,sBAAF;IAA0BC;EAA1B,IAAkCF,OAAxC;;EAEA,MAAMG,YAAY,GAAGC,OAAO,CAACC,aAAA,CAAKC,IAAL,CAC3BP,eAD2B,EAE3B,qBAF2B,CAAD,CAA5B;;EAKA,MAAMQ,OAAO,GAAG,CACd,GAAGJ,YAAY,EADD,EAEdF,sBAAsB,IACpBI,aAAA,CAAKC,IAAL,CAAUP,eAAV,EAA2B,kCAA3B,CAHY,EAIdK,OAAO,CAACI,OAAR,CAAgB,mCAAhB,CAJc,CAAhB;;EAOA,IAAIN,GAAJ,EAAS;IACPK,OAAO,CAACE,IAAR,CAAaL,OAAO,CAACI,OAAR,CAAgB,gCAAhB,CAAb;EACD;;EAED,OAAOD,OAAP;AACD"}