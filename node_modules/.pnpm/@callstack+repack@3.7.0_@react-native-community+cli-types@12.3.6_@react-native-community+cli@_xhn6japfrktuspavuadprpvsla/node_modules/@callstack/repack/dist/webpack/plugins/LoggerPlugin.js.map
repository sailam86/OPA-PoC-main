{"version":3,"file":"LoggerPlugin.js","names":["LoggerPlugin","SUPPORTED_TYPES","constructor","config","output","undefined","console","reporters","push","ConsoleReporter","isWorker","level","isVerbose","file","FileReporter","filename","reporter","composeReporters","createEntry","issuer","type","args","timestamp","includes","Date","now","message","processEntry","entry","listener","process","apply","compiler","options","stats","devServerEnabled","webpack","ProgressPlugin","percentage","text","progress","value","label","platform","hooks","infrastructureLog","tap","thisCompilation","compilation","log","intercept","call","time","done","errors","warnings","toJson","all","timings","entires","length","map","error","moduleName","warning","filter","Boolean","statsEntry","toString","flush","stop","on","errorEntry"],"sources":["../../../src/webpack/plugins/LoggerPlugin.ts"],"sourcesContent":["import webpack from 'webpack';\nimport { isVerbose, isWorker } from '../../env';\nimport {\n  composeReporters,\n  FileReporter,\n  ConsoleReporter,\n  Reporter,\n  LogEntry,\n  LogType,\n} from '../../logging';\nimport type { WebpackPlugin } from '../../types';\n\nexport type GenericFilter = Array<string | RegExp>;\n\n/**\n * {@link LoggerPlugin} configuration options.\n */\nexport interface LoggerPluginConfig {\n  /** Target application platform. */\n  platform: string;\n  /** Whether development server is running/enabled. */\n  devServerEnabled?: boolean;\n  /** Logging output config. */\n  output?: {\n    /** Whether to log to console. */\n    console?: boolean;\n    /** Absolute path to file to log messages to. */\n    file?: string;\n    /** Listener for new messages. */\n    listener?: (logEntry: LogEntry) => void;\n  };\n}\n\n/**\n * Logger plugin that handles all logging coming from the Webpack ecosystem, including compilation\n * progress as well as debug logs from other plugins and resolvers.\n *\n * @category Webpack Plugin\n */\nexport class LoggerPlugin implements WebpackPlugin {\n  private static SUPPORTED_TYPES: string[] = ['debug', 'info', 'warn', 'error'];\n\n  /** {@link Reporter} instance used to actually writing logs to terminal/file. */\n  readonly reporter: Reporter;\n\n  /**\n   * Constructs new `LoggerPlugin`.\n   *\n   * @param config Plugin configuration options.\n   */\n  constructor(private config: LoggerPluginConfig) {\n    if (this.config.output === undefined) {\n      this.config.output = { console: true };\n    }\n\n    const reporters = [];\n    if (this.config.output.console) {\n      reporters.push(\n        new ConsoleReporter({\n          isWorker: isWorker(),\n          level: isVerbose() ? 'verbose' : 'normal',\n        })\n      );\n    }\n    if (this.config.output.file) {\n      reporters.push(new FileReporter({ filename: this.config.output.file }));\n    }\n    this.reporter = composeReporters(reporters);\n  }\n\n  /**\n   * Create log entry from Webpack log message from {@link WebpackLogger}.\n   *\n   * @param issuer Issuer of the message.\n   * @param type Type of the message.\n   * @param args The body of the message.\n   * @param timestamp Timestamp when the message was recorder.\n   * @returns Log entry object or undefined when if message is invalid.\n   */\n  createEntry(\n    issuer: string,\n    type: string,\n    args: any[],\n    timestamp?: number\n  ): LogEntry | undefined {\n    if (LoggerPlugin.SUPPORTED_TYPES.includes(type)) {\n      return {\n        timestamp: timestamp ?? Date.now(),\n        issuer: issuer.includes('reactNativeAssetsLoader')\n          ? 'reactNativeAssetsLoader'\n          : issuer,\n        type: type as LogType,\n        message: args,\n      };\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Process log entry and pass it to {@link reporter} instance.\n   *\n   * @param entry Log entry to process\n   */\n  processEntry(entry: LogEntry) {\n    if (\n      !this.config.output?.console &&\n      !this.config.output?.file &&\n      !this.config.output?.listener\n    ) {\n      return;\n    }\n\n    this.reporter.process(entry);\n\n    if (this.config.output.listener) {\n      this.config.output.listener(entry);\n    }\n  }\n\n  /**\n   * Apply the plugin.\n   *\n   * @param compiler Webpack compiler instance.\n   */\n  apply(compiler: webpack.Compiler) {\n    // Make sure webpack-cli doesn't print stats by default.\n    if (compiler.options.stats === undefined) {\n      compiler.options.stats = 'none';\n    }\n\n    if (this.config.devServerEnabled) {\n      new webpack.ProgressPlugin((percentage, message, text) => {\n        const entry = this.createEntry('LoggerPlugin', 'info', [\n          {\n            progress: {\n              value: percentage,\n              label: message,\n              message: text,\n              platform: this.config.platform,\n            },\n          },\n        ]);\n        if (entry) {\n          this.processEntry(entry);\n        }\n      }).apply(compiler);\n    }\n\n    compiler.hooks.infrastructureLog.tap(\n      'LoggerPlugin',\n      (issuer, type, args) => {\n        const entry = this.createEntry(issuer, type, args);\n        if (entry) {\n          this.processEntry(entry);\n        }\n        return true;\n      }\n    );\n\n    compiler.hooks.thisCompilation.tap('LoggerPlugin', (compilation) => {\n      compilation.hooks.log.intercept({\n        call: (issuer, { time, type, args }) => {\n          const entry = this.createEntry(issuer, type, args, time);\n          if (entry) {\n            this.processEntry(entry);\n          }\n        },\n      });\n    });\n\n    compiler.hooks.done.tap('LoggerPlugin', (stats) => {\n      if (this.config.devServerEnabled) {\n        const { time, errors, warnings } = stats.toJson({\n          all: false,\n          timings: true,\n          errors: true,\n          warnings: true,\n        });\n\n        let entires: Array<LogEntry | undefined> = [];\n        if (errors?.length) {\n          entires = [\n            this.createEntry('LoggerPlugin', 'error', [\n              'Failed to build bundle due to errors',\n            ]),\n            ...errors.map((error) =>\n              this.createEntry('LoggerPlugin', 'error', [\n                `Error in \"${error.moduleName}\": ${error.message}`,\n              ])\n            ),\n          ];\n        } else {\n          entires = [\n            this.createEntry('LoggerPlugin', 'info', [\n              warnings?.length ? 'Bundle built with warnings' : 'Bundle built',\n              { time },\n            ]),\n            ...(warnings?.map((warning) =>\n              this.createEntry('LoggerPlugin', 'warn', [\n                `Warning in \"${warning.moduleName}\": ${warning.message}`,\n              ])\n            ) ?? []),\n          ];\n        }\n\n        for (const entry of entires.filter(Boolean) as LogEntry[]) {\n          this.processEntry(entry);\n        }\n      } else {\n        const statsEntry = this.createEntry('LoggerPlugin', 'info', [\n          stats.toString('all'),\n        ]);\n        if (statsEntry) {\n          this.processEntry(statsEntry);\n        }\n      }\n\n      this.reporter.flush();\n      this.reporter.stop();\n    });\n\n    process.on('uncaughtException', (error) => {\n      const errorEntry = this.createEntry('LoggerPlugin', 'error', [error]);\n      if (errorEntry) {\n        this.processEntry(errorEntry);\n      }\n      this.reporter.flush();\n      this.reporter.stop();\n    });\n\n    process.on('exit', () => {\n      this.reporter.flush();\n      this.reporter.stop();\n    });\n  }\n}\n"],"mappings":"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"}