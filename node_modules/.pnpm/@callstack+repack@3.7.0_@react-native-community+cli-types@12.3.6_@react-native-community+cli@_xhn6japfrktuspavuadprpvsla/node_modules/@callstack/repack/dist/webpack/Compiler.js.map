{"version":3,"file":"Compiler.js","names":["Compiler","EventEmitter","workers","assetsCache","statsCache","resolvers","progressSenders","isCompilationInProgress","constructor","cliOptions","reporter","isVerbose","spawnWorker","platform","workerData","arguments","start","process","env","WORKER_ENV_KEY","VERBOSE_ENV_KEY","undefined","worker","Worker","path","join","__dirname","stdout","stderr","SHARE_ENV","onStdChunk","chunk","fallbackType","data","toString","trim","log","JSON","parse","timestamp","Date","now","type","issuer","message","on","callPendingResolvers","error","forEach","resolver","value","event","stats","assets","reduce","acc","filename","info","asset","Buffer","from","adaptFilenameToPlatform","emit","sendProgress","total","completed","code","Error","getAsset","fileFromCache","Promise","reject","push","resolve","concat","filter","item","getSource","test","fs","promises","readFile","config","root","getSourceMap","sourceMapFilename","related","sourceMap","getMimeType","endsWith","mimeTypes","lookup"],"sources":["../../src/webpack/Compiler.ts"],"sourcesContent":["import { Worker, SHARE_ENV } from 'worker_threads';\nimport path from 'path';\nimport fs from 'fs';\nimport EventEmitter from 'events';\nimport webpack from 'webpack';\nimport mimeTypes from 'mime-types';\nimport { SendProgress } from '@callstack/repack-dev-server';\nimport type { CliOptions, StartArguments } from '../types';\nimport type { LogType, Reporter } from '../logging';\nimport { VERBOSE_ENV_KEY, WORKER_ENV_KEY } from '../env';\nimport { adaptFilenameToPlatform } from './utils';\n\nexport interface Asset {\n  data: string | Buffer;\n  info: Record<string, any>;\n}\n\ntype Platform = string;\n\nexport class Compiler extends EventEmitter {\n  workers: Record<Platform, Worker> = {};\n  assetsCache: Record<Platform, Record<string, Asset>> = {};\n  statsCache: Record<Platform, webpack.StatsCompilation> = {};\n  resolvers: Record<Platform, Array<(error?: Error) => void>> = {};\n  progressSenders: Record<Platform, SendProgress[]> = {};\n  isCompilationInProgress: Record<Platform, boolean> = {};\n\n  constructor(\n    private cliOptions: CliOptions,\n    private reporter: Reporter,\n    private isVerbose?: boolean\n  ) {\n    super();\n  }\n\n  private spawnWorker(platform: string) {\n    this.isCompilationInProgress[platform] = true;\n\n    const workerData = {\n      ...this.cliOptions,\n      arguments: {\n        start: {\n          ...(this.cliOptions.arguments as { start: StartArguments }).start,\n          platform,\n        },\n      },\n    };\n\n    process.env[WORKER_ENV_KEY] = '1';\n    process.env[VERBOSE_ENV_KEY] = this.isVerbose ? '1' : undefined;\n\n    const worker = new Worker(path.join(__dirname, './webpackWorker.js'), {\n      stdout: true,\n      stderr: true,\n      env: SHARE_ENV,\n      workerData,\n    });\n\n    const onStdChunk = (chunk: string | Buffer, fallbackType: LogType) => {\n      const data = chunk.toString().trim();\n      if (data) {\n        try {\n          const log = JSON.parse(data);\n          this.reporter.process(log);\n        } catch {\n          this.reporter.process({\n            timestamp: Date.now(),\n            type: fallbackType,\n            issuer: 'WebpackCompilerWorker',\n            message: [data],\n          });\n        }\n      }\n    };\n\n    worker.stdout.on('data', (chunk) => {\n      onStdChunk(chunk, 'info');\n    });\n\n    worker.stderr.on('data', (chunk) => {\n      onStdChunk(chunk, 'info');\n    });\n\n    const callPendingResolvers = (error?: Error) => {\n      this.resolvers[platform].forEach((resolver) => resolver(error));\n      this.resolvers[platform] = [];\n    };\n\n    worker.on(\n      'message',\n      (\n        value:\n          | { event: 'watchRun' | 'invalid' }\n          | {\n              event: 'progress';\n              total: number;\n              completed: number;\n              message: string;\n            }\n          | { event: 'error'; error: Error }\n          | {\n              event: 'done';\n              assets: Array<{\n                filename: string;\n                data: Uint8Array;\n                info: Record<string, any>;\n              }>;\n              stats: webpack.StatsCompilation;\n            }\n      ) => {\n        if (value.event === 'done') {\n          this.isCompilationInProgress[platform] = false;\n          this.statsCache[platform] = value.stats;\n          this.assetsCache[platform] = value.assets.reduce(\n            (acc, { filename, data, info }) => {\n              const asset = {\n                data: Buffer.from(data),\n                info,\n              };\n              return {\n                ...acc,\n                [adaptFilenameToPlatform(filename)]: asset,\n              };\n            },\n            {}\n          );\n          callPendingResolvers();\n          this.emit(value.event, { platform, stats: value.stats });\n        } else if (value.event === 'error') {\n          this.emit(value.event, value.error);\n        } else if (value.event === 'progress') {\n          this.progressSenders[platform].forEach((sendProgress) =>\n            sendProgress({\n              total: value.total,\n              completed: value.completed,\n            })\n          );\n          this.emit(value.event, {\n            total: value.total,\n            completed: value.completed,\n            message: value.message,\n          });\n        } else {\n          this.isCompilationInProgress[platform] = true;\n          this.emit(value.event, { platform });\n        }\n      }\n    );\n\n    worker.on('error', (error) => {\n      callPendingResolvers(error);\n    });\n\n    worker.on('exit', (code) => {\n      callPendingResolvers(new Error(`Worker stopped with exit code ${code}`));\n    });\n\n    return worker;\n  }\n\n  async getAsset(\n    filename: string,\n    platform: string,\n    sendProgress?: SendProgress\n  ): Promise<Asset> {\n    // Return file from assetsCache if exists\n    const fileFromCache = this.assetsCache[platform]?.[filename];\n    if (fileFromCache) {\n      return fileFromCache;\n    }\n\n    // Spawn new worker if not already running\n    if (!this.workers[platform]) {\n      this.workers[platform] = this.spawnWorker(platform);\n    } else if (!this.isCompilationInProgress[platform]) {\n      return Promise.reject(\n        new Error(\n          `File ${filename} for ${platform} not found in compilation assets`\n        )\n      );\n    }\n\n    if (sendProgress) {\n      this.progressSenders[platform] = this.progressSenders[platform] ?? [];\n      this.progressSenders[platform].push(sendProgress);\n    }\n    return new Promise<Asset>((resolve, reject) => {\n      // Add new resolver to be executed when compilation is finished\n      this.resolvers[platform] = (this.resolvers[platform] ?? []).concat(\n        (error?: Error) => {\n          this.progressSenders[platform] = this.progressSenders[\n            platform\n          ].filter((item) => item !== sendProgress);\n\n          if (error) {\n            reject(error);\n          } else {\n            const fileFromCache = this.assetsCache[platform]?.[filename];\n            if (fileFromCache) {\n              resolve(fileFromCache);\n            } else {\n              reject(\n                new Error(\n                  `File ${filename} for ${platform} not found in compilation assets`\n                )\n              );\n            }\n          }\n        }\n      );\n    });\n  }\n\n  async getSource(\n    filename: string,\n    platform?: string\n  ): Promise<string | Buffer> {\n    if (/\\.bundle/.test(filename) && platform) {\n      return (await this.getAsset(filename, platform)).data;\n    }\n\n    return fs.promises.readFile(\n      path.join(this.cliOptions.config.root, filename),\n      'utf8'\n    );\n  }\n\n  async getSourceMap(\n    filename: string,\n    platform: string\n  ): Promise<string | Buffer> {\n    const { info } = await this.getAsset(filename, platform);\n    const sourceMapFilename = info.related?.sourceMap as string | undefined;\n\n    if (sourceMapFilename) {\n      return (await this.getAsset(sourceMapFilename, platform)).data;\n    }\n\n    return Promise.reject(\n      new Error(`Source map for ${filename} for ${platform} is missing`)\n    );\n  }\n\n  getMimeType(filename: string) {\n    if (filename.endsWith('.bundle')) {\n      return 'text/javascript';\n    }\n\n    return mimeTypes.lookup(filename) || 'text/plain';\n  }\n}\n"],"mappings":"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"}