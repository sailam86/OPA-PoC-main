{"version":3,"file":"utils.js","names":["getFilesInDirectory","dirname","fs","Promise","resolve","reject","readdir","error","results","filter","result","getScaleNumber","scaleKey","parseFloat","replace","readFile","filename","Error","getImageSize","resourcePath","resourceFilename","suffixPattern","info","imageSize","scaleMatch","path","basename","match","RegExp","escapeStringRegexp","scale","Number","isFinite","width","height"],"sources":["../../../../src/webpack/loaders/assetsLoader/utils.ts"],"sourcesContent":["import path from 'path';\nimport imageSize from 'image-size';\nimport type { LoaderContext } from 'loader-utils';\nimport escapeStringRegexp from 'escape-string-regexp';\nimport type { ImageSize } from './types';\n\nexport async function getFilesInDirectory(\n  dirname: string,\n  fs: LoaderContext['fs']\n) {\n  return await new Promise<string[]>((resolve, reject) =>\n    fs.readdir(dirname, (error, results) => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(\n          (results as Array<any> | undefined)?.filter(\n            (result) => typeof result === 'string'\n          ) ?? []\n        );\n      }\n    })\n  );\n}\n\nexport function getScaleNumber(scaleKey: string) {\n  return parseFloat(scaleKey.replace(/[^\\d.]/g, ''));\n}\n\nexport async function readFile(filename: string, fs: LoaderContext['fs']) {\n  return new Promise<string | Buffer>((resolve, reject) => {\n    fs.readFile(filename, (error, results) => {\n      if (error) {\n        reject(error);\n      } else if (results) {\n        resolve(results);\n      } else {\n        reject(\n          new Error(\n            `Read file operation on ${filename} returned empty content.`\n          )\n        );\n      }\n    });\n  });\n}\n\nexport function getImageSize({\n  resourcePath,\n  resourceFilename,\n  suffixPattern,\n}: {\n  resourcePath: string;\n  resourceFilename: string;\n  suffixPattern: string;\n}): ImageSize | undefined {\n  let info: ImageSize | undefined;\n  try {\n    info = imageSize(resourcePath);\n\n    const [, scaleMatch = ''] =\n      path\n        .basename(resourcePath)\n        .match(\n          new RegExp(`^${escapeStringRegexp(resourceFilename)}${suffixPattern}`)\n        ) ?? [];\n\n    if (scaleMatch) {\n      const scale = Number(scaleMatch.replace(/[^\\d.]/g, ''));\n\n      if (typeof scale === 'number' && Number.isFinite(scale)) {\n        info.width && (info.width /= scale);\n        info.height && (info.height /= scale);\n      }\n    }\n  } catch {\n    // Asset is not an image\n  }\n\n  return info;\n}\n"],"mappings":";;;;;;;;;;AAAA;;AACA;;AAEA;;;;AAGO,eAAeA,mBAAf,CACLC,OADK,EAELC,EAFK,EAGL;EACA,OAAO,MAAM,IAAIC,OAAJ,CAAsB,CAACC,OAAD,EAAUC,MAAV,KACjCH,EAAE,CAACI,OAAH,CAAWL,OAAX,EAAoB,CAACM,KAAD,EAAQC,OAAR,KAAoB;IACtC,IAAID,KAAJ,EAAW;MACTF,MAAM,CAACE,KAAD,CAAN;IACD,CAFD,MAEO;MACLH,OAAO,CACL,CAACI,OAAD,aAACA,OAAD,uBAACA,OAAD,CAAqCC,MAArC,CACGC,MAAD,IAAY,OAAOA,MAAP,KAAkB,QADhC,MAEK,EAHA,CAAP;IAKD;EACF,CAVD,CADW,CAAb;AAaD;;AAEM,SAASC,cAAT,CAAwBC,QAAxB,EAA0C;EAC/C,OAAOC,UAAU,CAACD,QAAQ,CAACE,OAAT,CAAiB,SAAjB,EAA4B,EAA5B,CAAD,CAAjB;AACD;;AAEM,eAAeC,QAAf,CAAwBC,QAAxB,EAA0Cd,EAA1C,EAAmE;EACxE,OAAO,IAAIC,OAAJ,CAA6B,CAACC,OAAD,EAAUC,MAAV,KAAqB;IACvDH,EAAE,CAACa,QAAH,CAAYC,QAAZ,EAAsB,CAACT,KAAD,EAAQC,OAAR,KAAoB;MACxC,IAAID,KAAJ,EAAW;QACTF,MAAM,CAACE,KAAD,CAAN;MACD,CAFD,MAEO,IAAIC,OAAJ,EAAa;QAClBJ,OAAO,CAACI,OAAD,CAAP;MACD,CAFM,MAEA;QACLH,MAAM,CACJ,IAAIY,KAAJ,CACG,0BAAyBD,QAAS,0BADrC,CADI,CAAN;MAKD;IACF,CAZD;EAaD,CAdM,CAAP;AAeD;;AAEM,SAASE,YAAT,CAAsB;EAC3BC,YAD2B;EAE3BC,gBAF2B;EAG3BC;AAH2B,CAAtB,EAQmB;EACxB,IAAIC,IAAJ;;EACA,IAAI;IACFA,IAAI,GAAG,IAAAC,kBAAA,EAAUJ,YAAV,CAAP;IAEA,MAAM,GAAGK,UAAU,GAAG,EAAhB,IACJC,aAAA,CACGC,QADH,CACYP,YADZ,EAEGQ,KAFH,CAGI,IAAIC,MAAJ,CAAY,IAAG,IAAAC,2BAAA,EAAmBT,gBAAnB,CAAqC,GAAEC,aAAc,EAApE,CAHJ,KAIO,EALT;;IAOA,IAAIG,UAAJ,EAAgB;MACd,MAAMM,KAAK,GAAGC,MAAM,CAACP,UAAU,CAACV,OAAX,CAAmB,SAAnB,EAA8B,EAA9B,CAAD,CAApB;;MAEA,IAAI,OAAOgB,KAAP,KAAiB,QAAjB,IAA6BC,MAAM,CAACC,QAAP,CAAgBF,KAAhB,CAAjC,EAAyD;QACvDR,IAAI,CAACW,KAAL,KAAeX,IAAI,CAACW,KAAL,IAAcH,KAA7B;QACAR,IAAI,CAACY,MAAL,KAAgBZ,IAAI,CAACY,MAAL,IAAeJ,KAA/B;MACD;IACF;EACF,CAlBD,CAkBE,MAAM,CACN;EACD;;EAED,OAAOR,IAAP;AACD"}