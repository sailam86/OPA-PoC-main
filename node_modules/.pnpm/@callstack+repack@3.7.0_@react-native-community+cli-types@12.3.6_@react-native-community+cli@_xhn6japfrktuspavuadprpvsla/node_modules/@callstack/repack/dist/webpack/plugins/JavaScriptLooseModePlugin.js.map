{"version":3,"file":"JavaScriptLooseModePlugin.js","names":["JavaScriptLooseModePlugin","constructor","config","apply","compiler","shouldUseLooseMode","filename","webpack","ModuleFilenameHelpers","matchObject","hooks","make","tap","compilation","moduleTemplates","javascript","render","moduleSource","resource","source","toString","match","index","undefined","replacement","sources","ReplaceSource","replace","length"],"sources":["../../../src/webpack/plugins/JavaScriptLooseModePlugin.ts"],"sourcesContent":["import webpack from 'webpack';\nimport { Rule, WebpackPlugin } from '../../types';\n\n/**\n * {@link JavaScriptLooseModePlugin} configuration options.\n */\nexport interface JavaScriptLooseModePluginConfig {\n  /** Convert to loose mode all modules that match the rule. */\n  test: Rule | Rule[];\n  /** Convert to loose mode only those modules that match the rule. */\n  include: Rule | Rule[];\n  /** Exclude all modules that mach the rule from being converted to loose mode. */\n  exclude: Rule | Rule[];\n}\n\n/**\n * Enable JavaScript loose mode, by removing `use strict` directives from the code.\n * This plugin should only be used for compatibility reasons with Metro, where some libraries\n * might not work in JavaScript Strict mode.\n *\n * @category Webpack Plugin\n */\nexport class JavaScriptLooseModePlugin implements WebpackPlugin {\n  /**\n   * Constructs new `JavaScriptLooseModePlugin`.\n   *\n   * @param config Plugin configuration options.\n   */\n  constructor(private config: JavaScriptLooseModePluginConfig) {}\n\n  /**\n   * Apply the plugin.\n   *\n   * @param compiler Webpack compiler instance.\n   */\n  apply(compiler: webpack.Compiler) {\n    const shouldUseLooseMode = (filename: string) =>\n      webpack.ModuleFilenameHelpers.matchObject(this.config, filename);\n\n    compiler.hooks.make.tap(\n      'JavaScriptLooseModePlugin',\n      (compilation: webpack.Compilation) => {\n        compilation.moduleTemplates.javascript.hooks.render.tap(\n          'JavaScriptLooseModePlugin',\n          (\n            moduleSource: webpack.sources.Source,\n            { resource }: { resource: string }\n          ) => {\n            if (!shouldUseLooseMode(resource)) {\n              return moduleSource;\n            }\n\n            const source = moduleSource.source().toString();\n            const match = source.match(/['\"]use strict['\"]/);\n            if (!match || match.index === undefined) {\n              return moduleSource;\n            }\n            const replacement = new webpack.sources.ReplaceSource(moduleSource);\n            replacement.replace(match.index, match.index + match[0].length, '');\n            return replacement;\n          }\n        );\n      }\n    );\n  }\n}\n"],"mappings":";;;;;;;AAAA;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,yBAAN,CAAyD;EAC9D;AACF;AACA;AACA;AACA;EACEC,WAAW,CAASC,MAAT,EAAkD;IAAA,KAAzCA,MAAyC,GAAzCA,MAAyC;EAAE;EAE/D;AACF;AACA;AACA;AACA;;;EACEC,KAAK,CAACC,QAAD,EAA6B;IAChC,MAAMC,kBAAkB,GAAIC,QAAD,IACzBC,gBAAA,CAAQC,qBAAR,CAA8BC,WAA9B,CAA0C,KAAKP,MAA/C,EAAuDI,QAAvD,CADF;;IAGAF,QAAQ,CAACM,KAAT,CAAeC,IAAf,CAAoBC,GAApB,CACE,2BADF,EAEGC,WAAD,IAAsC;MACpCA,WAAW,CAACC,eAAZ,CAA4BC,UAA5B,CAAuCL,KAAvC,CAA6CM,MAA7C,CAAoDJ,GAApD,CACE,2BADF,EAEE,CACEK,YADF,EAEE;QAAEC;MAAF,CAFF,KAGK;QACH,IAAI,CAACb,kBAAkB,CAACa,QAAD,CAAvB,EAAmC;UACjC,OAAOD,YAAP;QACD;;QAED,MAAME,MAAM,GAAGF,YAAY,CAACE,MAAb,GAAsBC,QAAtB,EAAf;QACA,MAAMC,KAAK,GAAGF,MAAM,CAACE,KAAP,CAAa,oBAAb,CAAd;;QACA,IAAI,CAACA,KAAD,IAAUA,KAAK,CAACC,KAAN,KAAgBC,SAA9B,EAAyC;UACvC,OAAON,YAAP;QACD;;QACD,MAAMO,WAAW,GAAG,IAAIjB,gBAAA,CAAQkB,OAAR,CAAgBC,aAApB,CAAkCT,YAAlC,CAApB;QACAO,WAAW,CAACG,OAAZ,CAAoBN,KAAK,CAACC,KAA1B,EAAiCD,KAAK,CAACC,KAAN,GAAcD,KAAK,CAAC,CAAD,CAAL,CAASO,MAAxD,EAAgE,EAAhE;QACA,OAAOJ,WAAP;MACD,CAlBH;IAoBD,CAvBH;EAyBD;;AA1C6D"}