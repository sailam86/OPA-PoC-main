{"version":3,"file":"OutputPlugin.js","names":["OutputPlugin","constructor","config","enabled","platform","Error","output","extraChunks","include","type","outputPath","path","join","context","apply","compiler","logger","getInfrastructureLogger","extraAssets","map","spec","isAbsolute","isLocalChunk","chunkId","webpack","ModuleFilenameHelpers","matchObject","test","exclude","entryGroup","entryChunk","entryChunkName","entryName","localChunks","remoteChunks","auxiliaryAssets","Set","hooks","compilation","tap","processAssets","name","stage","Compilation","PROCESS_ASSETS_STAGE_ADDITIONS","chunkGroups","find","group","isInitial","chunks","chunk","sharedChunks","has","getAllInitialChunks","filter","sharedChunk","forEach","add","push","id","toString","isUsedByLocalChunk","some","localChunk","includes","Object","keys","assets","filename","asset","afterEmit","tapPromise","outputOptions","localAssetsCopyProcessor","bundleFilename","sourceMapFilename","assetsPath","bundlePath","dirname","debug","AssetsCopyProcessor","bundleOutput","bundleOutputDir","sourcemapOutput","assetsDest","remoteAssetsCopyProcessors","enqueueChunk","isEntry","auxiliaryAssetsCopyProcessor","auxiliaryAssetsPath","AuxiliaryAssetsCopyProcessor","enqueueAsset","Promise","all","execute","values","reduce","acc","processor","concat"],"sources":["../../../src/webpack/plugins/OutputPlugin.ts"],"sourcesContent":["import path from 'path';\nimport webpack from 'webpack';\nimport { Rule, WebpackPlugin } from '../../types';\nimport { AssetsCopyProcessor } from './utils/AssetsCopyProcessor';\nimport { AuxiliaryAssetsCopyProcessor } from './utils/AuxiliaryAssetsCopyProcessor';\n\n/**\n * Matching options to check if given {@link DestinationConfig} should be used.\n */\nexport type DestinationMatchRules = {\n  /**\n   * Rule (string or RegExp) that must match the chunk name (or id if name is not available),\n   * for the whole `DestinationMatchRules` to match.\n   */\n  test?: Rule | Rule[];\n\n  /**\n   * Rule (string or RegExp) that must match the chunk name (or id if name is not available),\n   * for the whole `DestinationMatchRules` to match.\n   */\n  include?: Rule | Rule[];\n\n  /**\n   * Rule (string or RegExp) that __MUST NOT__ match the chunk name (or id if name is not available),\n   * for the whole `DestinationMatchRules` to match.\n   */\n  exclude?: Rule | Rule[];\n};\n\n/**\n * Destination config for local chunks.\n */\nexport type LocalDestinationConfig = {\n  type: 'local';\n};\n\n/**\n * Destination config for remote chunks.\n */\nexport type RemoteDestinationConfig = {\n  type: 'remote';\n\n  /** Output path to a directory, where remote chunks should be saved. */\n  outputPath: string;\n};\n\n/**\n * Destination config for chunks.\n */\nexport type DestinationConfig =\n  | LocalDestinationConfig\n  | RemoteDestinationConfig;\n\n/**\n * Destination specification for chunks.\n */\nexport type DestinationSpec = DestinationMatchRules & DestinationConfig;\n\n/**\n * {@link OutputPlugin} configuration options.\n */\nexport interface OutputPluginConfig {\n  /** Context in which all resolution happens. Usually it's project root directory. */\n  context: string;\n\n  /** Target application platform. */\n  platform: string;\n\n  /**\n   * Whether the plugin is enabled. Defaults to `true`.\n   *\n   * Useful when running with development server, in which case, it's not necessary for this plugin\n   * to be enabled.\n   */\n  enabled?: boolean;\n\n  /** The entry chunk name, `main` by default. */\n  entryName?: string;\n\n  /**\n   * Output options specifying where to save generated bundle, source map and assets.\n   */\n  output: {\n    /** Bundle output filename - name under which generated bundle will be saved. */\n    bundleFilename?: string;\n\n    /**\n     * Source map filename - name under which generated source map (for the main bundle) will be saved.\n     */\n    sourceMapFilename?: string;\n\n    /** Assets output path - directory where generated static assets will be saved. */\n    assetsPath?: string;\n\n    /**\n     * Auxiliary assets output path - directory where generated auxiliary assets will be saved\n     *\n     * Useful when working with remote-assets generated by assetsLoader\n     * */\n    auxiliaryAssetsPath?: string;\n  };\n\n  /**\n   * Options specifying how to deal with extra chunks generated in the compilation,\n   * usually by using dynamic `import(...)` function.\n   *\n   * By default all extra chunks will be saved under `<projectRoot>/build/outputs/<platform>/remotes` directory.\n   *\n   * __Specifying custom value for this option, will disable default setting - you will need\n   * to configure `outputPath` for `type: 'remote'` yourself.__\n   *\n   * If you want to have some of the chunks available inside the `.ipa`/`.apk` file generated by React Native,\n   * you must configure this options to match the chunks you want (using `test`/`include`/`exclude`)\n   * and set the `type` to `local`, for example:\n   * ```ts\n   * new OutputPlugin({\n   *   context,\n   *   platform,\n   *   output,\n   *   extraChunks: [\n   *     {\n   *       // Make `my-chunk` local\n   *       include: /my-chunk/,\n   *       type: 'local',\n   *     },\n   *     {\n   *       // Make any other chunk remote\n   *       exclude: /my-chunk/,\n   *       type: 'remote',\n   *       outputPath,\n   *     },\n   *   ]\n   * });\n   * ```\n   */\n  extraChunks?: DestinationSpec[];\n}\n\n/**\n * Plugin for copying generated files (bundle, chunks, assets) from Webpack's built location to the\n * React Native application directory, so that the files can be packed together into the `ipa`/`apk`.\n *\n * @category Webpack Plugin\n */\nexport class OutputPlugin implements WebpackPlugin {\n  /**\n   * Constructs new `OutputPlugin`.\n   *\n   * @param config Plugin configuration options.\n   */\n  constructor(private config: OutputPluginConfig) {\n    this.config.enabled = this.config.enabled ?? true;\n\n    if (!this.config.platform) {\n      throw new Error('Missing `platform` option in `OutputPlugin`');\n    }\n\n    if (!this.config.output) {\n      throw new Error('Missing `output` option in `OutputPlugin`');\n    }\n\n    this.config.extraChunks = this.config.extraChunks ?? [\n      {\n        include: /.*/,\n        type: 'remote',\n        outputPath: path.join(\n          this.config.context,\n          'build/outputs',\n          this.config.platform,\n          'remotes'\n        ),\n      },\n    ];\n  }\n\n  /**\n   * Apply the plugin.\n   *\n   * @param compiler Webpack compiler instance.\n   */\n  apply(compiler: webpack.Compiler) {\n    if (!this.config.enabled) {\n      return;\n    }\n\n    const logger = compiler.getInfrastructureLogger('RepackOutputPlugin');\n\n    const extraAssets = (this.config.extraChunks ?? []).map((spec) =>\n      spec.type === 'remote'\n        ? {\n            ...spec,\n            outputPath: !path.isAbsolute(spec.outputPath)\n              ? path.join(this.config.context, spec.outputPath)\n              : spec.outputPath,\n          }\n        : spec\n    );\n\n    const isLocalChunk = (chunkId: string): boolean => {\n      for (const spec of extraAssets) {\n        if (spec.type === 'local') {\n          if (\n            webpack.ModuleFilenameHelpers.matchObject(\n              {\n                test: spec.test,\n                include: spec.include,\n                exclude: spec.exclude,\n              },\n              chunkId\n            )\n          ) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    };\n\n    let entryGroup: webpack.Compilation['chunkGroups'][0] | undefined;\n    let entryChunk: webpack.Chunk | undefined;\n    const entryChunkName = this.config.entryName ?? 'main';\n    const localChunks: webpack.Chunk[] = [];\n    const remoteChunks: webpack.Chunk[] = [];\n    const auxiliaryAssets: Set<string> = new Set();\n\n    compiler.hooks.compilation.tap('RepackOutputPlugin', (compilation) => {\n      compilation.hooks.processAssets.tap(\n        {\n          name: 'RepackOutputPlugin',\n          stage: webpack.Compilation.PROCESS_ASSETS_STAGE_ADDITIONS,\n        },\n        () => {\n          entryGroup = compilation.chunkGroups.find((group) =>\n            group.isInitial()\n          );\n          entryChunk = entryGroup?.chunks.find(\n            (chunk) => chunk.name === entryChunkName\n          );\n          const sharedChunks = new Set<webpack.Chunk>();\n\n          for (const chunk of compilation.chunks) {\n            // Do not process shared chunks right now.\n            if (sharedChunks.has(chunk)) {\n              continue;\n            }\n\n            [...chunk.getAllInitialChunks()]\n              .filter((sharedChunk) => sharedChunk !== chunk)\n              .forEach((sharedChunk) => {\n                sharedChunks.add(sharedChunk);\n              });\n\n            // Entry chunk\n            if (entryChunk && entryChunk === chunk) {\n              localChunks.push(chunk);\n            } else if (isLocalChunk(chunk.name ?? chunk.id?.toString())) {\n              localChunks.push(chunk);\n            } else {\n              remoteChunks.push(chunk);\n            }\n          }\n\n          // Process shared chunks to add them either as local or remote chunk.\n          for (const sharedChunk of sharedChunks) {\n            const isUsedByLocalChunk = localChunks.some((localChunk) => {\n              return [...localChunk.getAllInitialChunks()].includes(\n                sharedChunk\n              );\n            });\n            if (\n              isUsedByLocalChunk ||\n              isLocalChunk(sharedChunk.name ?? sharedChunk.id?.toString())\n            ) {\n              localChunks.push(sharedChunk);\n            } else {\n              remoteChunks.push(sharedChunk);\n            }\n          }\n\n          if (!entryChunk) {\n            throw new Error(\n              'Cannot infer entry chunk - this should have not happened.'\n            );\n          }\n\n          // Collect auxiliary assets (only remote-assets for now)\n          Object.keys(compilation.assets)\n            .filter((filename) => /^remote-assets/.test(filename))\n            .forEach((asset) => auxiliaryAssets.add(asset));\n        }\n      );\n    });\n\n    compiler.hooks.afterEmit.tapPromise(\n      'RepackOutputPlugin',\n      async (compilation) => {\n        const outputPath = compilation.outputOptions.path;\n        if (!outputPath) {\n          throw new Error('Cannot infer output path from compilation');\n        }\n\n        let localAssetsCopyProcessor;\n\n        let { bundleFilename, sourceMapFilename, assetsPath } =\n          this.config.output;\n        if (bundleFilename) {\n          if (!path.isAbsolute(bundleFilename)) {\n            bundleFilename = path.join(this.config.context, bundleFilename);\n          }\n\n          const bundlePath = path.dirname(bundleFilename);\n\n          if (!sourceMapFilename) {\n            sourceMapFilename = `${bundleFilename}.map`;\n          }\n\n          if (!path.isAbsolute(sourceMapFilename)) {\n            sourceMapFilename = path.join(\n              this.config.context,\n              sourceMapFilename\n            );\n          }\n\n          if (!assetsPath) {\n            assetsPath = bundlePath;\n          }\n\n          logger.debug('Detected output paths:', {\n            bundleFilename,\n            bundlePath,\n            sourceMapFilename,\n            assetsPath,\n          });\n\n          localAssetsCopyProcessor = new AssetsCopyProcessor({\n            platform: this.config.platform,\n            compilation,\n            outputPath,\n            bundleOutput: bundleFilename,\n            bundleOutputDir: bundlePath,\n            sourcemapOutput: sourceMapFilename,\n            assetsDest: assetsPath,\n            logger,\n          });\n        }\n\n        const remoteAssetsCopyProcessors: Record<string, AssetsCopyProcessor> =\n          {};\n\n        for (const chunk of localChunks) {\n          // Process entry chunk\n          localAssetsCopyProcessor?.enqueueChunk(chunk, {\n            isEntry: entryChunk === chunk,\n          });\n        }\n\n        for (const chunk of remoteChunks) {\n          const spec = extraAssets.find((spec) =>\n            webpack.ModuleFilenameHelpers.matchObject(\n              {\n                test: spec.test,\n                include: spec.include,\n                exclude: spec.exclude,\n              },\n              chunk.name || chunk.id?.toString()\n            )\n          );\n\n          if (spec?.type === 'remote') {\n            if (!remoteAssetsCopyProcessors[spec.outputPath]) {\n              remoteAssetsCopyProcessors[spec.outputPath] =\n                new AssetsCopyProcessor({\n                  platform: this.config.platform,\n                  compilation,\n                  outputPath,\n                  bundleOutput: '',\n                  bundleOutputDir: spec.outputPath,\n                  sourcemapOutput: '',\n                  assetsDest: spec.outputPath,\n                  logger,\n                });\n            }\n\n            remoteAssetsCopyProcessors[spec.outputPath].enqueueChunk(chunk, {\n              isEntry: false,\n            });\n          }\n        }\n\n        let auxiliaryAssetsCopyProcessor;\n        const { auxiliaryAssetsPath } = this.config.output;\n        if (auxiliaryAssetsPath) {\n          auxiliaryAssetsCopyProcessor = new AuxiliaryAssetsCopyProcessor({\n            platform: this.config.platform,\n            outputPath,\n            assetsDest: auxiliaryAssetsPath,\n            logger,\n          });\n\n          for (const asset of auxiliaryAssets) {\n            auxiliaryAssetsCopyProcessor.enqueueAsset(asset);\n          }\n        }\n\n        await Promise.all([\n          ...(localAssetsCopyProcessor?.execute() ?? []),\n          ...Object.values(remoteAssetsCopyProcessors).reduce(\n            (acc, processor) => acc.concat(...processor.execute()),\n            [] as Promise<void>[]\n          ),\n          ...(auxiliaryAssetsCopyProcessor?.execute() ?? []),\n        ]);\n      }\n    );\n  }\n}\n"],"mappings":"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"}