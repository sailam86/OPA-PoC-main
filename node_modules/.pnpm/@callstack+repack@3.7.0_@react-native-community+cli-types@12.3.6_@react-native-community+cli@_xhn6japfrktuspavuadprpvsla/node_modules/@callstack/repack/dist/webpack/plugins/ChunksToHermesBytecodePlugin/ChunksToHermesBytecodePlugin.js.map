{"version":3,"file":"ChunksToHermesBytecodePlugin.js","names":["ChunksToHermesBytecodePlugin","name","constructor","config","apply","compiler","logger","getInfrastructureLogger","enabled","debug","options","output","compareBeforeEmit","reactNativePath","path","join","context","hermesCLIPath","getHermesCLIPath","hooks","assetEmitted","tapPromise","file","outputPath","shouldTransformAsset","ModuleFilenameHelpers","matchObject","test","include","exclude","bundlePath","sourceMapPath","useSourceMaps","fs","pathExists","sourceMap","hermesSourceMapPath","transformBundleToHermesBytecode","info","composeSourceMaps","packagerMapPath","compilerMapPath"],"sources":["../../../../src/webpack/plugins/ChunksToHermesBytecodePlugin/ChunksToHermesBytecodePlugin.ts"],"sourcesContent":["import path from 'path';\nimport fs from 'fs-extra';\n\nimport { ModuleFilenameHelpers, Compiler } from 'webpack';\nimport type { Rule, WebpackPlugin } from '../../../types';\n\nimport {\n  composeSourceMaps,\n  getHermesCLIPath,\n  transformBundleToHermesBytecode,\n} from './utils';\n\n/**\n * {@link ChunksToHermesBytecodePlugin} configuration options.\n */\ninterface ChunksToHermesBytecodePluginConfig {\n  /**\n   * Whether the plugin is enabled.\n   *\n   * Since hermes compilation of chunks is not necessary for every build, this\n   * option allows one to enable/disable the plugin. Normally, you would only\n   * enable this plugin for production builds.\n   */\n  enabled: boolean;\n\n  /** Matching files will be converted to Hermes bytecode. */\n  test: Rule | Rule[];\n\n  /** Include matching files in conversion to Hermes bytecode. */\n  include?: Rule | Rule[];\n\n  /** Exclude matching files from conversion to Hermes bytecode. */\n  exclude?: Rule | Rule[];\n\n  /** Path to the Hermes compiler binary. */\n  hermesCLIPath?: string;\n\n  /** Path to React-Native package inside node_modules */\n  reactNativePath?: string;\n\n  /** Force enable `compareBeforeEmit` webpack output option which this plugin disables by default. */\n  compareBeforeEmit?: boolean;\n}\n\n/**\n * Enable Hermes bytecode compilation for the given chunks.\n * This plugin is intended to be used with the `webpack-bundle` command.\n * It will transform the bundle into Hermes bytecode and replace the original bundle with the bytecode.\n * It will also compose the source maps generated by webpack and Hermes.\n *\n * Note: This plugin should only be used for production builds.\n * It is not possible to use this plugin for development builds.\n *\n * Note: You should exclude `index.bundle` from being transformed.\n * The `index.bundle` file is transformed by `react-native` after enabling Hermes in your project.\n *\n * @example ```js\n * // webpack.config.mjs\n * import * as Repack from '@callstack/repack';\n *\n * // ...\n * plugins: [\n *   new Repack.ChunksToHermesBytecodePlugin({\n *    enabled: mode === 'production' && !devServer,\n *    test: /\\.(js)?bundle$/,\n *    exclude: /index.bundle$/,\n *   }),\n * ]\n * ```\n *\n * @category Webpack Plugin\n */\nexport class ChunksToHermesBytecodePlugin implements WebpackPlugin {\n  private readonly name = 'ChunksToHermesBytecodePlugin';\n\n  constructor(private config: ChunksToHermesBytecodePluginConfig) {}\n\n  apply(compiler: Compiler) {\n    const logger = compiler.getInfrastructureLogger(this.name);\n\n    if (!this.config.enabled) {\n      logger.debug('Skipping hermes compilation');\n      return;\n    }\n\n    /**\n     * This plugin will only transform assets that are emitted after the compilation.\n     * To ensure that asset is always emitted we disable the `compareBeforeEmit` option\n     * which is enabled by default in Webpack.\n     *\n     * `compareBeforeEmit` option is used to skip emitting assets that are identical to the\n     * ones present in build directory, which might result in transformation being\n     * skipped when there is a untransformed bundle present in the build directory.\n     */\n    compiler.options.output.compareBeforeEmit = !!this.config.compareBeforeEmit;\n\n    const reactNativePath =\n      this.config.reactNativePath ||\n      path.join(compiler.context, 'node_modules', 'react-native');\n\n    const hermesCLIPath =\n      this.config.hermesCLIPath || getHermesCLIPath(reactNativePath);\n\n    compiler.hooks.assetEmitted.tapPromise(\n      this.name,\n      async (file, { outputPath }) => {\n        const shouldTransformAsset = ModuleFilenameHelpers.matchObject(\n          {\n            test: this.config.test,\n            include: this.config.include,\n            exclude: this.config.exclude,\n          },\n          file\n        );\n\n        if (!shouldTransformAsset) {\n          return;\n        }\n\n        const bundlePath = path.join(outputPath, file);\n        const sourceMapPath = `${bundlePath}.map`;\n        const useSourceMaps = await fs.pathExists(sourceMapPath);\n\n        logger.debug(`Starting hermes compilation for asset: ${bundlePath}`);\n\n        const { sourceMap: hermesSourceMapPath } =\n          await transformBundleToHermesBytecode({\n            hermesCLIPath,\n            useSourceMaps,\n            bundlePath,\n          });\n\n        logger.info(`Asset transformed: ${file}`);\n\n        if (useSourceMaps) {\n          await composeSourceMaps({\n            reactNativePath,\n            packagerMapPath: sourceMapPath,\n            compilerMapPath: hermesSourceMapPath,\n          });\n\n          logger.info(`Asset sourceMap transformed: ${file}.map`);\n        }\n      }\n    );\n  }\n}\n"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAGA;;;;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,4BAAN,CAA4D;EAChDC,IAAI,GAAG,8BAAH;;EAErBC,WAAW,CAASC,MAAT,EAAqD;IAAA,KAA5CA,MAA4C,GAA5CA,MAA4C;EAAE;;EAElEC,KAAK,CAACC,QAAD,EAAqB;IACxB,MAAMC,MAAM,GAAGD,QAAQ,CAACE,uBAAT,CAAiC,KAAKN,IAAtC,CAAf;;IAEA,IAAI,CAAC,KAAKE,MAAL,CAAYK,OAAjB,EAA0B;MACxBF,MAAM,CAACG,KAAP,CAAa,6BAAb;MACA;IACD;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;IACIJ,QAAQ,CAACK,OAAT,CAAiBC,MAAjB,CAAwBC,iBAAxB,GAA4C,CAAC,CAAC,KAAKT,MAAL,CAAYS,iBAA1D;;IAEA,MAAMC,eAAe,GACnB,KAAKV,MAAL,CAAYU,eAAZ,IACAC,aAAA,CAAKC,IAAL,CAAUV,QAAQ,CAACW,OAAnB,EAA4B,cAA5B,EAA4C,cAA5C,CAFF;;IAIA,MAAMC,aAAa,GACjB,KAAKd,MAAL,CAAYc,aAAZ,IAA6B,IAAAC,uBAAA,EAAiBL,eAAjB,CAD/B;IAGAR,QAAQ,CAACc,KAAT,CAAeC,YAAf,CAA4BC,UAA5B,CACE,KAAKpB,IADP,EAEE,OAAOqB,IAAP,EAAa;MAAEC;IAAF,CAAb,KAAgC;MAC9B,MAAMC,oBAAoB,GAAGC,8BAAA,CAAsBC,WAAtB,CAC3B;QACEC,IAAI,EAAE,KAAKxB,MAAL,CAAYwB,IADpB;QAEEC,OAAO,EAAE,KAAKzB,MAAL,CAAYyB,OAFvB;QAGEC,OAAO,EAAE,KAAK1B,MAAL,CAAY0B;MAHvB,CAD2B,EAM3BP,IAN2B,CAA7B;;MASA,IAAI,CAACE,oBAAL,EAA2B;QACzB;MACD;;MAED,MAAMM,UAAU,GAAGhB,aAAA,CAAKC,IAAL,CAAUQ,UAAV,EAAsBD,IAAtB,CAAnB;;MACA,MAAMS,aAAa,GAAI,GAAED,UAAW,MAApC;MACA,MAAME,aAAa,GAAG,MAAMC,gBAAA,CAAGC,UAAH,CAAcH,aAAd,CAA5B;MAEAzB,MAAM,CAACG,KAAP,CAAc,0CAAyCqB,UAAW,EAAlE;MAEA,MAAM;QAAEK,SAAS,EAAEC;MAAb,IACJ,MAAM,IAAAC,sCAAA,EAAgC;QACpCpB,aADoC;QAEpCe,aAFoC;QAGpCF;MAHoC,CAAhC,CADR;MAOAxB,MAAM,CAACgC,IAAP,CAAa,sBAAqBhB,IAAK,EAAvC;;MAEA,IAAIU,aAAJ,EAAmB;QACjB,MAAM,IAAAO,wBAAA,EAAkB;UACtB1B,eADsB;UAEtB2B,eAAe,EAAET,aAFK;UAGtBU,eAAe,EAAEL;QAHK,CAAlB,CAAN;QAMA9B,MAAM,CAACgC,IAAP,CAAa,gCAA+BhB,IAAK,MAAjD;MACD;IACF,CAxCH;EA0CD;;AAzEgE"}