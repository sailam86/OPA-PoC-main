{"version":3,"file":"AssetsCopyProcessor.js","names":["AssetsCopyProcessor","queue","constructor","config","filesystem","fs","copyAsset","from","to","logger","debug","ensureDir","path","dirname","copyFile","enqueueChunk","chunk","isEntry","compilation","outputPath","bundleOutput","sourcemapOutput","bundleOutputDir","assetsDest","platform","sourcemapOutputDir","chunkFile","files","relatedSourceMap","assetsInfo","get","related","sourceMap","sourceMapFile","Array","isArray","bundleDestination","join","sourceMapDestination","shouldOverrideMappingInfo","chunkSource","push","bundleContent","readFile","writeFile","replace","basename","sourceMapSource","sourceMapContent","mediaAssets","auxiliaryFiles","filter","file","test","map","asset","manifest","manifestSource","manifestDestination","manifestContent","execute","work"],"sources":["../../../../src/webpack/plugins/utils/AssetsCopyProcessor.ts"],"sourcesContent":["import path from 'path';\nimport fs from 'fs-extra';\nimport webpack from 'webpack';\nimport { WebpackLogger } from '../../../types';\n\nexport class AssetsCopyProcessor {\n  queue: Array<() => Promise<void>> = [];\n\n  constructor(\n    public readonly config: {\n      platform: string;\n      compilation: webpack.Compilation;\n      outputPath: string;\n      bundleOutput: string;\n      bundleOutputDir: string;\n      sourcemapOutput: string;\n      assetsDest: string;\n      logger: WebpackLogger;\n    },\n    private filesystem: Pick<\n      typeof fs,\n      'ensureDir' | 'copyFile' | 'readFile' | 'writeFile'\n    > = fs\n  ) {}\n\n  private async copyAsset(from: string, to: string) {\n    this.config.logger.debug('Copying asset:', from, 'to:', to);\n    await this.filesystem.ensureDir(path.dirname(to));\n    await this.filesystem.copyFile(from, to);\n  }\n\n  enqueueChunk(chunk: webpack.Chunk, { isEntry }: { isEntry: boolean }) {\n    const {\n      compilation,\n      outputPath,\n      bundleOutput,\n      sourcemapOutput,\n      bundleOutputDir,\n      assetsDest,\n      platform,\n    } = this.config;\n    const sourcemapOutputDir = sourcemapOutput\n      ? path.dirname(sourcemapOutput)\n      : bundleOutputDir;\n\n    // Chunk bundle e.g: `index.bundle`, `src_App_js.chunk.bundle`\n    const [chunkFile] = [...chunk.files];\n\n    // Sometimes there are no files associated with the chunk and the OutputPlugin fails\n    // Skipping such chunks is a temporary workaround resulting in proper behaviour\n    // TODO: determine the real cause of this issue\n    if (!chunkFile) {\n      return;\n    }\n\n    const relatedSourceMap =\n      compilation.assetsInfo.get(chunkFile)?.related?.sourceMap;\n    // Source map for the chunk e.g: `index.bundle.map`, `src_App_js.chunk.bundle.map`\n    const sourceMapFile = Array.isArray(relatedSourceMap)\n      ? relatedSourceMap[0]\n      : relatedSourceMap;\n\n    // Target file path where to save the bundle.\n    const bundleDestination = isEntry\n      ? bundleOutput\n      : path.join(platform === 'ios' ? assetsDest : bundleOutputDir, chunkFile);\n\n    // Target file path where to save the source map file.\n    const sourceMapDestination = isEntry\n      ? sourcemapOutput\n      : path.join(\n          platform === 'ios' ? assetsDest : sourcemapOutputDir,\n          sourceMapFile ?? ''\n        );\n\n    // Entry chunks (main/index bundle) need to be processed differently to\n    // adjust file name and the content of source mapping info to match values provided by:\n    // - `--bundle-output` -> `bundleOutput`\n    // - `--sourcemap-output` -> `sourcemapOutput`\n    const shouldOverrideMappingInfo = isEntry && sourceMapFile;\n\n    // Absolute path to chunk bundle file saved in `output.path`\n    const chunkSource = path.join(outputPath, chunkFile);\n\n    // If chunk is an entry chunk, meaning it's a main/index bundle,\n    // save it based on `bundleDestination` and overwrite `sourceMappingURL`\n    // to point to correct file name (e.g: `index.bundle.map` -> `main.jsbundle.map`).\n    // Otherwise, simply copy the file to it's target `bundleDestination`.\n    if (shouldOverrideMappingInfo) {\n      this.queue.push(async () => {\n        const bundleContent = await this.filesystem.readFile(\n          chunkSource,\n          'utf-8'\n        );\n        await this.filesystem.ensureDir(path.dirname(bundleDestination));\n        await this.filesystem.writeFile(\n          bundleDestination,\n          bundleContent.replace(\n            /\\/\\/# sourceMappingURL=.*$/,\n            `//# sourceMappingURL=${path.basename(sourceMapDestination)}`\n          )\n        );\n      });\n    } else {\n      this.queue.push(() => this.copyAsset(chunkSource, bundleDestination));\n    }\n\n    if (sourceMapFile) {\n      const sourceMapSource = path.join(outputPath, sourceMapFile);\n\n      // If chunk is an entry chunk, meaning it's a main/index bundle,\n      // save the source map file for it based on `sourceMapDestination` and values inside it,\n      // to point to a correct bundle file name (e.g: `index.bundle` -> `main.jsbundle`).\n      // Otherwise, simply copy the file to it's target `sourceMapDestination`.\n      if (isEntry) {\n        this.queue.push(async () => {\n          const sourceMapContent = await this.filesystem.readFile(\n            sourceMapSource,\n            'utf-8'\n          );\n          await this.filesystem.ensureDir(path.dirname(sourceMapDestination));\n          await this.filesystem.writeFile(\n            sourceMapDestination,\n            sourceMapContent.replace(\n              chunkFile,\n              path.basename(bundleDestination)\n            )\n          );\n        });\n      } else {\n        this.queue.push(() =>\n          this.copyAsset(sourceMapSource, sourceMapDestination)\n        );\n      }\n    }\n\n    // Copy regular assets\n    const mediaAssets = [...chunk.auxiliaryFiles]\n      .filter((file) => !/\\.(map|bundle\\.json)$/.test(file))\n      .filter((file) => !/^remote-assets/.test(file));\n\n    this.queue.push(\n      ...mediaAssets.map(\n        (asset) => () =>\n          this.copyAsset(\n            path.join(outputPath, asset),\n            path.join(assetsDest, asset)\n          )\n      )\n    );\n\n    // Manifest file name e.g: `index.bundle.json`, src_App_js.chunk.bundle.json`\n    const [manifest] = [...chunk.auxiliaryFiles].filter((file) =>\n      /\\.bundle\\.json$/.test(file)\n    );\n    if (manifest) {\n      const manifestSource = path.join(outputPath, manifest);\n      const manifestDestination = path.join(\n        platform === 'ios' ? assetsDest : bundleOutputDir,\n        isEntry ? `${path.basename(bundleDestination)}.json` : manifest\n      );\n\n      // If chunk is an entry chunk, meaning it's a main bundle,\n      // adjust chunk and source map names inside the manifest (e.g: `index.bundle` -> `main.jsbundle`,\n      // `index.bundle.map` -> `main.jsbundle.map`).\n      // Otherwise, simply copy the manifest.\n      if (isEntry) {\n        this.queue.push(async () => {\n          const manifestContent = await this.filesystem.readFile(\n            manifestSource,\n            'utf-8'\n          );\n          await this.filesystem.ensureDir(path.dirname(manifestDestination));\n          await this.filesystem.writeFile(\n            manifestDestination,\n            manifestContent\n              .replace(chunkFile, path.basename(bundleDestination))\n              .replace(\n                sourceMapFile ?? /.^/,\n                path.basename(sourceMapDestination)\n              )\n          );\n        });\n      } else {\n        this.queue.push(() =>\n          this.copyAsset(manifestSource, manifestDestination)\n        );\n      }\n    }\n  }\n\n  execute() {\n    const queue = this.queue;\n    this.queue = [];\n    return queue.map((work) => work());\n  }\n}\n"],"mappings":"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"}