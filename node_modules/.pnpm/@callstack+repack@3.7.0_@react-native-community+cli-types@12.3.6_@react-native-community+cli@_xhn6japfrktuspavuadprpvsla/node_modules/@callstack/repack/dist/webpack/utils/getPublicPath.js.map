{"version":3,"file":"getPublicPath.js","names":["getPublicPath","options","devServer","port","host","https","platform"],"sources":["../../../src/webpack/utils/getPublicPath.ts"],"sourcesContent":["import type { DevServerOptions } from '../../types';\n\n/** {@link getPublicPath} options. */\nexport interface GetPublicPathOptions {\n  /** Target application platform. */\n  platform: string;\n\n  /** Development server configuration options. */\n  devServer: Pick<DevServerOptions, 'port' | 'host' | 'https'>;\n}\n\n/**\n * Get Webpack's public path.\n *\n * @param options Options object.\n * @returns Value for Webpack's `output.publicPath` option.\n *\n * @category Webpack util\n *\n * @example Usage in Webpack config:\n * ```ts\n * import * as Repack from '@callstack/repack';\n *\n * export default (env) => {\n *   const {\n *     platform,\n *     devServer = undefined,\n *   } = env;\n *\n *   return {\n *     output: {\n *       publicPath: Repack.getPublicPath({ platform, devServer }),\n *     },\n *   };\n * };\n * ```\n */\nexport function getPublicPath(options?: GetPublicPathOptions) {\n  if (options?.devServer) {\n    const { port, host, https } = options.devServer;\n    return `${https ? 'https' : 'http'}://${host || 'localhost'}:${port}/${\n      options.platform\n    }/`;\n  } else {\n    return `noop:///`;\n  }\n}\n"],"mappings":";;;;;;;AAEA;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,aAAT,CAAuBC,OAAvB,EAAuD;EAC5D,IAAIA,OAAJ,aAAIA,OAAJ,eAAIA,OAAO,CAAEC,SAAb,EAAwB;IACtB,MAAM;MAAEC,IAAF;MAAQC,IAAR;MAAcC;IAAd,IAAwBJ,OAAO,CAACC,SAAtC;IACA,OAAQ,GAAEG,KAAK,GAAG,OAAH,GAAa,MAAO,MAAKD,IAAI,IAAI,WAAY,IAAGD,IAAK,IAClEF,OAAO,CAACK,QACT,GAFD;EAGD,CALD,MAKO;IACL,OAAQ,UAAR;EACD;AACF"}