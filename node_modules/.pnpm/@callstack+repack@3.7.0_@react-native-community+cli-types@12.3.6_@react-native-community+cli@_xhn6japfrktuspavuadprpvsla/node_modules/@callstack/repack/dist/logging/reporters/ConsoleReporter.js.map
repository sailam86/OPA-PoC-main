{"version":3,"file":"ConsoleReporter.js","names":["ConsoleReporter","constructor","config","internalReporter","isWorker","asJson","JsonConsoleReporter","InteractiveConsoleReporter","process","log","flush","stop","console","JSON","stringify","IS_SYMBOL_SUPPORTED","platform","env","CI","TERM","SYMBOLS","debug","colorette","gray","info","blue","warn","yellow","error","red","progress","green","FALLBACK_SYMBOLS","requestBuffer","level","type","firstMessage","message","processProgress","normalizedLog","normalizeLog","stdout","write","prettifyLog","throttle","value","label","percentage","Math","floor","timestamp","issuer","concat","push","msg","reqId","req","res","rest","bufferedReq","request","statusCode","method","url","Array","isArray","Object","keys","length","issuerOverride","undefined","body","colorizeText","toString","statusText","status","util","inspect","colors","depth","Date","toISOString","split","bold","logType","text"],"sources":["../../../src/logging/reporters/ConsoleReporter.ts"],"sourcesContent":["import util from 'util';\nimport colorette from 'colorette';\nimport throttle from 'lodash.throttle';\nimport type { LogEntry, LogType, Reporter } from '../types';\n\nexport interface ConsoleReporterConfig {\n  asJson?: boolean;\n  level?: 'silent' | 'normal' | 'verbose';\n  isWorker?: boolean;\n}\n\nexport class ConsoleReporter implements Reporter {\n  private internalReporter: Reporter;\n\n  constructor(private config: ConsoleReporterConfig) {\n    this.internalReporter =\n      this.config.isWorker || this.config.asJson\n        ? new JsonConsoleReporter(this.config)\n        : new InteractiveConsoleReporter(this.config);\n  }\n\n  process(log: LogEntry) {\n    this.internalReporter.process(log);\n  }\n\n  flush() {\n    this.internalReporter.flush();\n  }\n\n  stop() {\n    this.internalReporter.stop();\n  }\n}\n\nclass JsonConsoleReporter implements Reporter {\n  constructor(private config: ConsoleReporterConfig) {}\n\n  process(log: LogEntry) {\n    console.log(JSON.stringify(log));\n  }\n\n  flush() {\n    // NOOP\n  }\n\n  stop() {\n    // NOOP\n  }\n}\n\nconst IS_SYMBOL_SUPPORTED =\n  process.platform !== 'win32' ||\n  process.env.CI ||\n  process.env.TERM === 'xterm-256color';\n\nconst SYMBOLS: Record<LogType | 'progress', string> = {\n  debug: colorette.gray('?'),\n  info: colorette.blue('ℹ'),\n  warn: colorette.yellow('⚠'),\n  error: colorette.red('✖'),\n  progress: colorette.green('⇢'),\n};\n\nconst FALLBACK_SYMBOLS: Record<LogType | 'progress', string> = {\n  debug: colorette.gray('?'),\n  info: colorette.blue('i'),\n  warn: colorette.yellow('!'),\n  error: colorette.red('x'),\n  progress: colorette.green('->'),\n};\n\nclass InteractiveConsoleReporter implements Reporter {\n  private requestBuffer: Record<string, Object> = {};\n\n  constructor(private config: ConsoleReporterConfig) {}\n\n  process(log: LogEntry) {\n    // Do not log anything in silent mode\n    if (this.config.level === 'silent') {\n      return;\n    }\n\n    // Do not log debug messages in non-verbose mode\n    if (log.type === 'debug' && this.config.level !== 'verbose') {\n      return;\n    }\n\n    const [firstMessage] = log.message;\n    if (typeof firstMessage === 'object' && 'progress' in firstMessage) {\n      this.processProgress(log);\n      return;\n    }\n\n    const normalizedLog = this.normalizeLog(log);\n    if (normalizedLog) {\n      process.stdout.write(\n        `${\n          IS_SYMBOL_SUPPORTED ? SYMBOLS[log.type] : FALLBACK_SYMBOLS[log.type]\n        } ${this.prettifyLog(normalizedLog)}\\n`\n      );\n    }\n  }\n\n  private processProgress = throttle((log: LogEntry) => {\n    const {\n      progress: { value, label, message, platform },\n    } = log.message[0] as {\n      progress: {\n        value: number;\n        label: string;\n        message: string;\n        platform: string;\n      };\n    };\n\n    const percentage = Math.floor(value * 100);\n\n    process.stdout.write(\n      `${\n        IS_SYMBOL_SUPPORTED ? SYMBOLS.progress : FALLBACK_SYMBOLS.progress\n      } ${this.prettifyLog({\n        timestamp: log.timestamp,\n        issuer: log.issuer,\n        type: 'info',\n        message: [`Compiling ${platform}: ${percentage}% ${label}`].concat(\n          ...(message ? [`(${message})`] : [])\n        ),\n      })}\\n`\n    );\n  }, 2000);\n\n  private normalizeLog(log: LogEntry): LogEntry | undefined {\n    const message = [];\n    let issuer = log.issuer;\n\n    for (const value of log.message) {\n      if (\n        typeof value === 'string' ||\n        typeof value === 'boolean' ||\n        typeof value === 'number'\n      ) {\n        message.push(value);\n      } else if (\n        'msg' in value &&\n        (value as { msg: string }).msg === 'incoming request'\n      ) {\n        // Incoming dev server request\n        const { reqId, req } = value as { reqId: string; req: Object };\n        // Save req object, so that we can extract data when request gets completed\n        this.requestBuffer[reqId] = req;\n      } else if (\n        'msg' in value &&\n        (value as { msg: string }).msg === 'request completed'\n      ) {\n        // Dev server response\n        const { reqId, res, msg, ...rest } = value as {\n          reqId: string;\n          res: Object;\n          msg: string | string[];\n        };\n        const bufferedReq = this.requestBuffer[reqId];\n        if (bufferedReq) {\n          message.push({\n            request: {\n              statusCode: (res as any).statusCode,\n              method: (bufferedReq as any).method,\n              url: (bufferedReq as any).url,\n            },\n          });\n        }\n\n        if (msg) {\n          message.push(...(Array.isArray(msg) ? msg : [msg]));\n        }\n\n        if (Object.keys(rest).length) {\n          message.push(rest);\n        }\n      } else if ('msg' in value) {\n        const {\n          msg,\n          issuer: issuerOverride,\n          ...rest\n        } = value as { msg: string | string[]; issuer?: string };\n        issuer = issuerOverride || issuer;\n        message.push(...(Array.isArray(msg) ? msg : [msg]), rest);\n      } else {\n        message.push(value);\n      }\n    }\n\n    // Ignore empty logs\n    if (!message.length) {\n      return undefined;\n    }\n\n    return {\n      timestamp: log.timestamp,\n      type: log.type,\n      issuer,\n      message,\n    };\n  }\n\n  private prettifyLog(log: LogEntry) {\n    let body = '';\n\n    for (const value of log.message) {\n      if (\n        typeof value === 'string' ||\n        typeof value === 'boolean' ||\n        typeof value === 'number'\n      ) {\n        // Colorize and concat primitive values\n        body += colorizeText(log.type, value.toString());\n        body += ' ';\n      } else if ('request' in value) {\n        // Colorize and concat dev server req/res object\n        const { request } = value as {\n          request: { method: string; statusCode: number; url: string };\n        };\n        let statusText = `${request.method} ${request.statusCode}`;\n\n        let status = colorette.green(statusText);\n        if (request.statusCode >= 500) {\n          status = colorette.red(statusText);\n        } else if (request.statusCode >= 400) {\n          status = colorette.yellow(statusText);\n        }\n\n        body += `${status} ${colorette.gray(request.url)}`;\n        body += ' ';\n      } else if (Object.keys(value).length) {\n        // Colorize and concat generic object\n        body +=\n          util.inspect(value, {\n            colors: true,\n            depth: 3,\n          }) + ' ';\n      }\n    }\n\n    return (\n      colorette.gray(\n        `[${new Date(log.timestamp).toISOString().split('T')[1]}]`\n      ) +\n      colorette.bold(`[${log.issuer}]`) +\n      ` ${body}`\n    );\n  }\n\n  flush() {\n    // NOOP\n  }\n\n  stop() {\n    // NOOP\n  }\n}\n\n/**\n * Apply ANSI colors to given text.\n *\n * @param logType Log type for the text, based on which different colors will be applied.\n * @param text Text to apply the color onto.\n * @returns Text wrapped in ANSI color sequences.\n *\n * @internal\n */\nfunction colorizeText(logType: LogType, text: string) {\n  if (logType === 'warn') {\n    return colorette.yellow(text);\n  } else if (logType === 'error') {\n    return colorette.red(text);\n  }\n\n  return text;\n}\n"],"mappings":"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"}