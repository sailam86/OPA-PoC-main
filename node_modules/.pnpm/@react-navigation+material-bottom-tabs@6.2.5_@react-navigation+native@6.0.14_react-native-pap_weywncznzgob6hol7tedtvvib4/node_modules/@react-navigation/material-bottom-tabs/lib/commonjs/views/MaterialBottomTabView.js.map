{"version":3,"names":["MaterialCommunityIcons","require","default","e","isErrorLogged","name","color","size","selectionColor","_0","onLayout","_1","rest","test","message","console","error","warn","styles","icon","undefined","fontSize","MaterialBottomTabViewInner","state","navigation","descriptors","insets","useSafeAreaInsets","dark","colors","useTheme","paperTheme","usePaperTheme","buildLink","useLinkBuilder","t","DarkTheme","DefaultTheme","theme","React","useMemo","surface","card","index","dispatch","CommonActions","navigate","routes","merge","target","key","route","render","Platform","OS","onPress","accessibilityRole","borderless","centered","_2","rippleColor","_3","style","params","metaKey","altKey","ctrlKey","shiftKey","button","preventDefault","touchable","focused","options","tabBarIcon","tabBarLabel","title","tabBarColor","tabBarBadge","tabBarAccessibilityLabel","tabBarTestID","event","emit","type","canPreventDefault","defaultPrevented","MaterialBottomTabView","props","StyleSheet","create","backgroundColor","display","justifyContent"],"sources":["MaterialBottomTabView.tsx"],"sourcesContent":["import { SafeAreaProviderCompat } from '@react-navigation/elements';\nimport {\n  CommonActions,\n  Link,\n  ParamListBase,\n  Route,\n  TabNavigationState,\n  useLinkBuilder,\n  useTheme,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Platform, StyleSheet, Text } from 'react-native';\nimport {\n  BottomNavigation,\n  DarkTheme,\n  DefaultTheme,\n  useTheme as usePaperTheme,\n} from 'react-native-paper';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport type {\n  MaterialBottomTabDescriptorMap,\n  MaterialBottomTabNavigationConfig,\n  MaterialBottomTabNavigationHelpers,\n} from '../types';\n\ntype Props = MaterialBottomTabNavigationConfig & {\n  state: TabNavigationState<ParamListBase>;\n  navigation: MaterialBottomTabNavigationHelpers;\n  descriptors: MaterialBottomTabDescriptorMap;\n};\n\ntype Scene = { route: { key: string } };\n\n// Optionally require vector-icons referenced from react-native-paper:\n// https://github.com/callstack/react-native-paper/blob/4b26429c49053eaa4c3e0fae208639e01093fa87/src/components/MaterialCommunityIcon.tsx#L14\nlet MaterialCommunityIcons: React.ComponentType<\n  React.ComponentProps<\n    typeof import('react-native-vector-icons/MaterialCommunityIcons').default\n  >\n>;\n\ntry {\n  // Optionally require vector-icons\n  MaterialCommunityIcons =\n    require('react-native-vector-icons/MaterialCommunityIcons').default;\n} catch (e: any) {\n  let isErrorLogged = false;\n\n  // Fallback component for icons\n  MaterialCommunityIcons = ({\n    name,\n    color,\n    size,\n    selectionColor: _0,\n    onLayout: _1,\n    ...rest\n  }) => {\n    if (!isErrorLogged) {\n      if (\n        !/(Cannot find module|Module not found|Cannot resolve module)/.test(\n          e.message\n        )\n      ) {\n        console.error(e);\n      }\n\n      console.warn(\n        `Tried to use the icon '${name}' in a component from '@react-navigation/material-bottom-tabs', but 'react-native-vector-icons/MaterialCommunityIcons' could not be loaded.`,\n        `To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://reactnavigation.org/docs/material-bottom-tab-navigator/#tabbaricon.`\n      );\n\n      isErrorLogged = true;\n    }\n\n    return (\n      <Text\n        {...rest}\n        style={[\n          styles.icon,\n          {\n            color: typeof color !== 'number' ? color : undefined,\n            fontSize: size,\n          },\n        ]}\n      >\n        â–¡\n      </Text>\n    );\n  };\n}\n\nfunction MaterialBottomTabViewInner({\n  state,\n  navigation,\n  descriptors,\n  ...rest\n}: Props) {\n  const insets = useSafeAreaInsets();\n  const { dark, colors } = useTheme();\n  const paperTheme = usePaperTheme();\n\n  const buildLink = useLinkBuilder();\n\n  const t =\n    // If the theme from React Navigation and Paper match, then user the customized theme\n    // Otherwise fallback to the matching default theme from Paper\n    dark === paperTheme.dark ? paperTheme : dark ? DarkTheme : DefaultTheme;\n\n  const theme = React.useMemo(() => {\n    return {\n      ...t,\n      colors: {\n        ...t.colors,\n        ...colors,\n        surface: colors.card,\n      },\n    };\n  }, [colors, t]);\n\n  return (\n    <BottomNavigation\n      {...rest}\n      theme={theme}\n      navigationState={state}\n      onIndexChange={(index: number) =>\n        navigation.dispatch({\n          ...CommonActions.navigate({\n            name: state.routes[index].name,\n            merge: true,\n          }),\n          target: state.key,\n        })\n      }\n      renderScene={({ route }) => descriptors[route.key].render()}\n      renderTouchable={\n        Platform.OS === 'web'\n          ? ({\n              onPress,\n              route,\n              accessibilityRole: _0,\n              borderless: _1,\n              centered: _2,\n              rippleColor: _3,\n              style,\n              ...rest\n            }) => {\n              return (\n                <Link\n                  {...rest}\n                  // @ts-expect-error: to could be undefined, but it doesn't affect functionality\n                  to={buildLink(route.name, route.params)}\n                  accessibilityRole=\"link\"\n                  onPress={(e: any) => {\n                    if (\n                      !(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && // ignore clicks with modifier keys\n                      (e.button == null || e.button === 0) // ignore everything but left clicks\n                    ) {\n                      e.preventDefault();\n                      onPress?.(e);\n                    }\n                  }}\n                  style={[styles.touchable, style]}\n                />\n              );\n            }\n          : undefined\n      }\n      renderIcon={({ route, focused, color }) => {\n        const { options } = descriptors[route.key];\n\n        if (typeof options.tabBarIcon === 'string') {\n          return (\n            <MaterialCommunityIcons\n              name={options.tabBarIcon}\n              color={color}\n              size={24}\n              style={styles.icon}\n            />\n          );\n        }\n\n        if (typeof options.tabBarIcon === 'function') {\n          return options.tabBarIcon({ focused, color });\n        }\n\n        return null;\n      }}\n      getLabelText={({ route }: Scene) => {\n        const { options } = descriptors[route.key];\n\n        return options.tabBarLabel !== undefined\n          ? options.tabBarLabel\n          : options.title !== undefined\n          ? options.title\n          : (route as Route<string>).name;\n      }}\n      getColor={({ route }) => descriptors[route.key].options.tabBarColor}\n      getBadge={({ route }) => descriptors[route.key].options.tabBarBadge}\n      getAccessibilityLabel={({ route }) =>\n        descriptors[route.key].options.tabBarAccessibilityLabel\n      }\n      getTestID={({ route }) => descriptors[route.key].options.tabBarTestID}\n      onTabPress={({ route, preventDefault }) => {\n        const event = navigation.emit({\n          type: 'tabPress',\n          target: route.key,\n          canPreventDefault: true,\n        });\n\n        if (event.defaultPrevented) {\n          preventDefault();\n        }\n      }}\n      safeAreaInsets={insets}\n    />\n  );\n}\n\nexport default function MaterialBottomTabView(props: Props) {\n  return (\n    <SafeAreaProviderCompat>\n      <MaterialBottomTabViewInner {...props} />\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent',\n  },\n  touchable: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":";;;;;;;AAAA;;AACA;;AASA;;AACA;;AACA;;AAMA;;;;;;;;AAgBA;AACA;AACA,IAAIA,sBAAJ;;AAMA,IAAI;EACF;EACAA,sBAAsB,GACpBC,OAAO,CAAC,kDAAD,CAAP,CAA4DC,OAD9D;AAED,CAJD,CAIE,OAAOC,CAAP,EAAe;EACf,IAAIC,aAAa,GAAG,KAApB,CADe,CAGf;;EACAJ,sBAAsB,GAAG,QAOnB;IAAA,IAPoB;MACxBK,IADwB;MAExBC,KAFwB;MAGxBC,IAHwB;MAIxBC,cAAc,EAAEC,EAJQ;MAKxBC,QAAQ,EAAEC,EALc;MAMxB,GAAGC;IANqB,CAOpB;;IACJ,IAAI,CAACR,aAAL,EAAoB;MAClB,IACE,CAAC,8DAA8DS,IAA9D,CACCV,CAAC,CAACW,OADH,CADH,EAIE;QACAC,OAAO,CAACC,KAAR,CAAcb,CAAd;MACD;;MAEDY,OAAO,CAACE,IAAR,CACG,0BAAyBZ,IAAK,6IADjC,EAEG,uLAFH;MAKAD,aAAa,GAAG,IAAhB;IACD;;IAED,oBACE,oBAAC,iBAAD,eACMQ,IADN;MAEE,KAAK,EAAE,CACLM,MAAM,CAACC,IADF,EAEL;QACEb,KAAK,EAAE,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCc,SAD7C;QAEEC,QAAQ,EAAEd;MAFZ,CAFK;IAFT,aADF;EAcD,CAvCD;AAwCD;;AAED,SAASe,0BAAT,QAKU;EAAA,IAL0B;IAClCC,KADkC;IAElCC,UAFkC;IAGlCC,WAHkC;IAIlC,GAAGb;EAJ+B,CAK1B;EACR,MAAMc,MAAM,GAAG,IAAAC,6CAAA,GAAf;EACA,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAmB,IAAAC,gBAAA,GAAzB;EACA,MAAMC,UAAU,GAAG,IAAAC,0BAAA,GAAnB;EAEA,MAAMC,SAAS,GAAG,IAAAC,sBAAA,GAAlB;EAEA,MAAMC,CAAC,GACL;EACA;EACAP,IAAI,KAAKG,UAAU,CAACH,IAApB,GAA2BG,UAA3B,GAAwCH,IAAI,GAAGQ,2BAAH,GAAeC,8BAH7D;EAKA,MAAMC,KAAK,GAAGC,KAAK,CAACC,OAAN,CAAc,MAAM;IAChC,OAAO,EACL,GAAGL,CADE;MAELN,MAAM,EAAE,EACN,GAAGM,CAAC,CAACN,MADC;QAEN,GAAGA,MAFG;QAGNY,OAAO,EAAEZ,MAAM,CAACa;MAHV;IAFH,CAAP;EAQD,CATa,EASX,CAACb,MAAD,EAASM,CAAT,CATW,CAAd;EAWA,oBACE,oBAAC,kCAAD,eACMvB,IADN;IAEE,KAAK,EAAE0B,KAFT;IAGE,eAAe,EAAEf,KAHnB;IAIE,aAAa,EAAGoB,KAAD,IACbnB,UAAU,CAACoB,QAAX,CAAoB,EAClB,GAAGC,qBAAA,CAAcC,QAAd,CAAuB;QACxBzC,IAAI,EAAEkB,KAAK,CAACwB,MAAN,CAAaJ,KAAb,EAAoBtC,IADF;QAExB2C,KAAK,EAAE;MAFiB,CAAvB,CADe;MAKlBC,MAAM,EAAE1B,KAAK,CAAC2B;IALI,CAApB,CALJ;IAaE,WAAW,EAAE;MAAA,IAAC;QAAEC;MAAF,CAAD;MAAA,OAAe1B,WAAW,CAAC0B,KAAK,CAACD,GAAP,CAAX,CAAuBE,MAAvB,EAAf;IAAA,CAbf;IAcE,eAAe,EACbC,qBAAA,CAASC,EAAT,KAAgB,KAAhB,GACI,SASM;MAAA,IATL;QACCC,OADD;QAECJ,KAFD;QAGCK,iBAAiB,EAAE/C,EAHpB;QAICgD,UAAU,EAAE9C,EAJb;QAKC+C,QAAQ,EAAEC,EALX;QAMCC,WAAW,EAAEC,EANd;QAOCC,KAPD;QAQC,GAAGlD;MARJ,CASK;MACJ,oBACE,oBAAC,YAAD,eACMA,IADN;QAEE;QACA,EAAE,EAAEqB,SAAS,CAACkB,KAAK,CAAC9C,IAAP,EAAa8C,KAAK,CAACY,MAAnB,CAHf;QAIE,iBAAiB,EAAC,MAJpB;QAKE,OAAO,EAAG5D,CAAD,IAAY;UACnB,IACE,EAAEA,CAAC,CAAC6D,OAAF,IAAa7D,CAAC,CAAC8D,MAAf,IAAyB9D,CAAC,CAAC+D,OAA3B,IAAsC/D,CAAC,CAACgE,QAA1C,OAAuD;UACtDhE,CAAC,CAACiE,MAAF,IAAY,IAAZ,IAAoBjE,CAAC,CAACiE,MAAF,KAAa,CADlC,CADF,CAEuC;UAFvC,EAGE;YACAjE,CAAC,CAACkE,cAAF;YACAd,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAGpD,CAAH,CAAP;UACD;QACF,CAbH;QAcE,KAAK,EAAE,CAACe,MAAM,CAACoD,SAAR,EAAmBR,KAAnB;MAdT,GADF;IAkBD,CA7BL,GA8BI1C,SA7CR;IA+CE,UAAU,EAAE,SAA+B;MAAA,IAA9B;QAAE+B,KAAF;QAASoB,OAAT;QAAkBjE;MAAlB,CAA8B;MACzC,MAAM;QAAEkE;MAAF,IAAc/C,WAAW,CAAC0B,KAAK,CAACD,GAAP,CAA/B;;MAEA,IAAI,OAAOsB,OAAO,CAACC,UAAf,KAA8B,QAAlC,EAA4C;QAC1C,oBACE,oBAAC,sBAAD;UACE,IAAI,EAAED,OAAO,CAACC,UADhB;UAEE,KAAK,EAAEnE,KAFT;UAGE,IAAI,EAAE,EAHR;UAIE,KAAK,EAAEY,MAAM,CAACC;QAJhB,EADF;MAQD;;MAED,IAAI,OAAOqD,OAAO,CAACC,UAAf,KAA8B,UAAlC,EAA8C;QAC5C,OAAOD,OAAO,CAACC,UAAR,CAAmB;UAAEF,OAAF;UAAWjE;QAAX,CAAnB,CAAP;MACD;;MAED,OAAO,IAAP;IACD,CAlEH;IAmEE,YAAY,EAAE,SAAsB;MAAA,IAArB;QAAE6C;MAAF,CAAqB;MAClC,MAAM;QAAEqB;MAAF,IAAc/C,WAAW,CAAC0B,KAAK,CAACD,GAAP,CAA/B;MAEA,OAAOsB,OAAO,CAACE,WAAR,KAAwBtD,SAAxB,GACHoD,OAAO,CAACE,WADL,GAEHF,OAAO,CAACG,KAAR,KAAkBvD,SAAlB,GACAoD,OAAO,CAACG,KADR,GAECxB,KAAD,CAAyB9C,IAJ7B;IAKD,CA3EH;IA4EE,QAAQ,EAAE;MAAA,IAAC;QAAE8C;MAAF,CAAD;MAAA,OAAe1B,WAAW,CAAC0B,KAAK,CAACD,GAAP,CAAX,CAAuBsB,OAAvB,CAA+BI,WAA9C;IAAA,CA5EZ;IA6EE,QAAQ,EAAE;MAAA,IAAC;QAAEzB;MAAF,CAAD;MAAA,OAAe1B,WAAW,CAAC0B,KAAK,CAACD,GAAP,CAAX,CAAuBsB,OAAvB,CAA+BK,WAA9C;IAAA,CA7EZ;IA8EE,qBAAqB,EAAE;MAAA,IAAC;QAAE1B;MAAF,CAAD;MAAA,OACrB1B,WAAW,CAAC0B,KAAK,CAACD,GAAP,CAAX,CAAuBsB,OAAvB,CAA+BM,wBADV;IAAA,CA9EzB;IAiFE,SAAS,EAAE;MAAA,IAAC;QAAE3B;MAAF,CAAD;MAAA,OAAe1B,WAAW,CAAC0B,KAAK,CAACD,GAAP,CAAX,CAAuBsB,OAAvB,CAA+BO,YAA9C;IAAA,CAjFb;IAkFE,UAAU,EAAE,UAA+B;MAAA,IAA9B;QAAE5B,KAAF;QAASkB;MAAT,CAA8B;MACzC,MAAMW,KAAK,GAAGxD,UAAU,CAACyD,IAAX,CAAgB;QAC5BC,IAAI,EAAE,UADsB;QAE5BjC,MAAM,EAAEE,KAAK,CAACD,GAFc;QAG5BiC,iBAAiB,EAAE;MAHS,CAAhB,CAAd;;MAMA,IAAIH,KAAK,CAACI,gBAAV,EAA4B;QAC1Bf,cAAc;MACf;IACF,CA5FH;IA6FE,cAAc,EAAE3C;EA7FlB,GADF;AAiGD;;AAEc,SAAS2D,qBAAT,CAA+BC,KAA/B,EAA6C;EAC1D,oBACE,oBAAC,gCAAD,qBACE,oBAAC,0BAAD,EAAgCA,KAAhC,CADF,CADF;AAKD;;AAED,MAAMpE,MAAM,GAAGqE,uBAAA,CAAWC,MAAX,CAAkB;EAC/BrE,IAAI,EAAE;IACJsE,eAAe,EAAE;EADb,CADyB;EAI/BnB,SAAS,EAAE;IACToB,OAAO,EAAE,MADA;IAETC,cAAc,EAAE;EAFP;AAJoB,CAAlB,CAAf"}