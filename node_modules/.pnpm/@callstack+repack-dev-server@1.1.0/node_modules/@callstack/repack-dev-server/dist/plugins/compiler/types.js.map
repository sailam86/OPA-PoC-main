{"version":3,"file":"types.js","names":[],"sources":["../../../src/plugins/compiler/types.ts"],"sourcesContent":["import type { SendProgress } from '../../types';\n\n/**\n * Delegate with implementation for compiler-specific functions.\n */\nexport interface CompilerDelegate {\n  /**\n   * Get compiled asset content.\n   *\n   * If the compilation is in progress, it should wait until compilation finishes and then return the asset.\n   *\n   * @param filename Filename of the asset to get.\n   * @param platform Platform of the asset to get.\n   * @param sendProgress Function to notify the client who requested the asset about compilation progress.\n   */\n  getAsset: (\n    filename: string,\n    platform: string,\n    sendProgress?: SendProgress\n  ) => Promise<string | Buffer>;\n\n  /**\n   * Detect MIME type of the asset from `filename`, `platform` or `data` (or from combination of either).\n   *\n   * @param filename Filename of the asset.\n   * @param platform Platform of the asset.\n   * @param data Asset's content.\n   */\n  getMimeType: (\n    filename: string,\n    platform: string,\n    data: string | Buffer\n  ) => string;\n\n  /**\n   * Detect the platform from the URI - either from filename, query params or both.\n   *\n   * @param uri URI string.\n   */\n  inferPlatform?: (uri: string) => string | undefined;\n}\n"],"mappings":""}