{"version":3,"file":"compilerPlugin.js","names":["fastifyPlugin","compilerPlugin","instance","delegate","route","method","url","schema","querystring","type","properties","platform","handler","request","reply","file","params","query","log","error","notFound","compiler","inferPlatform","badRequest","startsWith","replace","multipart","asMultipart","sendProgress","completed","total","writeChunk","JSON","stringify","done","asset","getAsset","mimeType","getMimeType","buffer","Buffer","isBuffer","from","setHeader","String","byteLength","end","code","send","message","name","dependencies"],"sources":["../../../src/plugins/compiler/compilerPlugin.ts"],"sourcesContent":["import type { FastifyInstance } from 'fastify';\nimport fastifyPlugin from 'fastify-plugin';\nimport type { Server } from '../../types';\nimport type { SendProgress } from '../../types';\n\nasync function compilerPlugin(\n  instance: FastifyInstance,\n  { delegate }: { delegate: Server.Delegate }\n) {\n  instance.route({\n    method: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'HEAD'],\n    url: '/*',\n    schema: {\n      querystring: {\n        type: 'object',\n        properties: {\n          platform: {\n            type: 'string',\n          },\n        },\n      },\n    },\n    handler: async (request, reply) => {\n      let file = (request.params as { '*'?: string })['*'];\n      let { platform } = request.query as { platform?: string };\n\n      if (!file) {\n        // This technically should never happen - this route should not be called if file is missing.\n        request.log.error(`File was not provided`);\n        return reply.notFound();\n      }\n\n      // Let consumer infer the platform. If function is not provided fallback\n      // to platform query param.\n      platform = delegate.compiler.inferPlatform?.(request.url) ?? platform;\n\n      if (!platform) {\n        request.log.error('Cannot detect platform');\n        return reply.badRequest('Cannot detect platform');\n      }\n\n      // If platform happens to be in front of an asset remove it.\n      if (file.startsWith(`${platform}/`)) {\n        file = file.replace(`${platform}/`, '');\n      }\n\n      const multipart = reply.asMultipart();\n\n      const sendProgress: SendProgress = ({ completed, total }) => {\n        multipart?.writeChunk(\n          { 'Content-Type': 'application/json' },\n          JSON.stringify({\n            done: completed,\n            total,\n          })\n        );\n      };\n\n      try {\n        const asset = await delegate.compiler.getAsset(\n          file,\n          platform,\n          sendProgress\n        );\n        const mimeType = delegate.compiler.getMimeType(file, platform, asset);\n\n        if (multipart) {\n          const buffer = Buffer.isBuffer(asset) ? asset : Buffer.from(asset);\n          multipart.setHeader('Content-Type', `${mimeType}; charset=UTF-8`);\n          multipart.setHeader(\n            'Content-Length',\n            String(Buffer.byteLength(buffer))\n          );\n          multipart.end(buffer);\n        } else {\n          return reply.code(200).type(mimeType).send(asset);\n        }\n      } catch (error) {\n        request.log.error(error);\n        return reply.notFound((error as Error).message);\n      }\n    },\n  });\n}\n\nexport default fastifyPlugin(compilerPlugin, {\n  name: 'compiler-plugin',\n  dependencies: ['fastify-sensible', 'multipart-plugin'],\n});\n"],"mappings":"AACA,OAAOA,aAAP,MAA0B,gBAA1B;;AAIA,eAAeC,cAAf,CACEC,QADF,EAEE;EAAEC;AAAF,CAFF,EAGE;EACAD,QAAQ,CAACE,KAAT,CAAe;IACbC,MAAM,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,EAAuB,QAAvB,EAAiC,SAAjC,EAA4C,MAA5C,CADK;IAEbC,GAAG,EAAE,IAFQ;IAGbC,MAAM,EAAE;MACNC,WAAW,EAAE;QACXC,IAAI,EAAE,QADK;QAEXC,UAAU,EAAE;UACVC,QAAQ,EAAE;YACRF,IAAI,EAAE;UADE;QADA;MAFD;IADP,CAHK;IAabG,OAAO,EAAE,OAAOC,OAAP,EAAgBC,KAAhB,KAA0B;MAAA;;MACjC,IAAIC,IAAI,GAAIF,OAAO,CAACG,MAAT,CAAqC,GAArC,CAAX;MACA,IAAI;QAAEL;MAAF,IAAeE,OAAO,CAACI,KAA3B;;MAEA,IAAI,CAACF,IAAL,EAAW;QACT;QACAF,OAAO,CAACK,GAAR,CAAYC,KAAZ,CAAmB,uBAAnB;QACA,OAAOL,KAAK,CAACM,QAAN,EAAP;MACD,CARgC,CAUjC;MACA;;;MACAT,QAAQ,GAAG,gDAAAR,QAAQ,CAACkB,QAAT,EAAkBC,aAAlB,yGAAkCT,OAAO,CAACP,GAA1C,MAAkDK,QAA7D;;MAEA,IAAI,CAACA,QAAL,EAAe;QACbE,OAAO,CAACK,GAAR,CAAYC,KAAZ,CAAkB,wBAAlB;QACA,OAAOL,KAAK,CAACS,UAAN,CAAiB,wBAAjB,CAAP;MACD,CAjBgC,CAmBjC;;;MACA,IAAIR,IAAI,CAACS,UAAL,CAAiB,GAAEb,QAAS,GAA5B,CAAJ,EAAqC;QACnCI,IAAI,GAAGA,IAAI,CAACU,OAAL,CAAc,GAAEd,QAAS,GAAzB,EAA6B,EAA7B,CAAP;MACD;;MAED,MAAMe,SAAS,GAAGZ,KAAK,CAACa,WAAN,EAAlB;;MAEA,MAAMC,YAA0B,GAAG,CAAC;QAAEC,SAAF;QAAaC;MAAb,CAAD,KAA0B;QAC3DJ,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEK,UAAX,CACE;UAAE,gBAAgB;QAAlB,CADF,EAEEC,IAAI,CAACC,SAAL,CAAe;UACbC,IAAI,EAAEL,SADO;UAEbC;QAFa,CAAf,CAFF;MAOD,CARD;;MAUA,IAAI;QACF,MAAMK,KAAK,GAAG,MAAMhC,QAAQ,CAACkB,QAAT,CAAkBe,QAAlB,CAClBrB,IADkB,EAElBJ,QAFkB,EAGlBiB,YAHkB,CAApB;QAKA,MAAMS,QAAQ,GAAGlC,QAAQ,CAACkB,QAAT,CAAkBiB,WAAlB,CAA8BvB,IAA9B,EAAoCJ,QAApC,EAA8CwB,KAA9C,CAAjB;;QAEA,IAAIT,SAAJ,EAAe;UACb,MAAMa,MAAM,GAAGC,MAAM,CAACC,QAAP,CAAgBN,KAAhB,IAAyBA,KAAzB,GAAiCK,MAAM,CAACE,IAAP,CAAYP,KAAZ,CAAhD;UACAT,SAAS,CAACiB,SAAV,CAAoB,cAApB,EAAqC,GAAEN,QAAS,iBAAhD;UACAX,SAAS,CAACiB,SAAV,CACE,gBADF,EAEEC,MAAM,CAACJ,MAAM,CAACK,UAAP,CAAkBN,MAAlB,CAAD,CAFR;UAIAb,SAAS,CAACoB,GAAV,CAAcP,MAAd;QACD,CARD,MAQO;UACL,OAAOzB,KAAK,CAACiC,IAAN,CAAW,GAAX,EAAgBtC,IAAhB,CAAqB4B,QAArB,EAA+BW,IAA/B,CAAoCb,KAApC,CAAP;QACD;MACF,CAnBD,CAmBE,OAAOhB,KAAP,EAAc;QACdN,OAAO,CAACK,GAAR,CAAYC,KAAZ,CAAkBA,KAAlB;QACA,OAAOL,KAAK,CAACM,QAAN,CAAgBD,KAAD,CAAiB8B,OAAhC,CAAP;MACD;IACF;EAxEY,CAAf;AA0ED;;AAED,eAAejD,aAAa,CAACC,cAAD,EAAiB;EAC3CiD,IAAI,EAAE,iBADqC;EAE3CC,YAAY,EAAE,CAAC,kBAAD,EAAqB,kBAArB;AAF6B,CAAjB,CAA5B"}