{"version":3,"file":"types.js","names":[],"sources":["../../../src/plugins/symbolicate/types.ts"],"sourcesContent":["/**\n * Raw React Native stack frame.\n */\nexport interface ReactNativeStackFrame {\n  lineNumber: number | null;\n  column: number | null;\n  file: string | null;\n  methodName: string;\n}\n\n/**\n * React Native stack frame used as input when processing by {@link Symbolicator}.\n */\nexport interface InputStackFrame extends ReactNativeStackFrame {\n  file: string;\n}\n\n/**\n * Final symbolicated stack frame.\n */\nexport interface StackFrame extends InputStackFrame {\n  collapse: boolean;\n}\n\n/**\n * Represents [@babel/core-frame](https://babeljs.io/docs/en/babel-code-frame).\n */\nexport interface CodeFrame {\n  content: string;\n  location: {\n    row: number;\n    column: number;\n  };\n  fileName: string;\n}\n\n/**\n * Represents results of running {@link process} method on {@link Symbolicator} instance.\n */\nexport interface SymbolicatorResults {\n  codeFrame: CodeFrame | null;\n  stack: StackFrame[];\n}\n\n/**\n * Delegate with implementation for symbolication functions.\n */\nexport interface SymbolicatorDelegate {\n  /**\n   * Get source code of file in the URL.\n   *\n   * @param fileUrl A full URL pointing to a file.\n   */\n  getSource: (fileUrl: string) => Promise<string | Buffer>;\n\n  /**\n   * Get source map for the file in the URL.\n   *\n   * @param fileUrl A full (usually `http:`) URL pointing to a compiled file.\n   * The URL points to a file for which to return source map, not to the source map file itself,\n   * e.g: `http://localhost:8081/index.bundle?platform=ios`.\n   */\n  getSourceMap: (fileUrl: string) => Promise<string | Buffer>;\n\n  /**\n   * Check if given stack frame should be included in the new symbolicated stack.\n   *\n   * @param frame Stack frame to check.\n   */\n  shouldIncludeFrame: (frame: StackFrame) => boolean;\n}\n"],"mappings":""}